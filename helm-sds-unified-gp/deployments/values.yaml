
## MULTI NAMESPACE-BASED LOGS, RECOMMENDED IF ENGINEERS WANT TO RUN MULTIPLE ENVIRONMENT ON SAME CLUSTER
## IN DIFFERENT NAMESPACE, NORMALLY SET IT TO FALSE
Namespace_logs_enabled: false

# COUNTRY & TIMEZONE
timezone: Asia/Dhaka
country: bangladesh

# DOCKER-REGISTRY LOGIN & SECRET
imageCredentials:
  registry: index.docker.io
  username:
  password:
secret: docker-repo-login

MYSQL_ROOT_PASSWORD:
RABBITMQ_USER: guest
MINIO_KEY: seamless

# CONF
conf: /opt/seamless/conf

# LOGS
logs: /var/seamless/log

# DOCKER IMAGE
image:
  coreproxy: sdsdockerhub/ers-coreproxy:1.78.0
  businesslogic: sdsdockerhub/ers-businesslogic:3.58.2
  accountmanagement: sdsdockerhub/account-management-service:1.22.0
  accessmanagement: sdsdockerhub/access-management-system:feature-UBP-1795-2
  contractmanagement: sdsdockerhub/ers-contract-management-system:2.32.0
  dealermanagement: sdsdockerhub/ers-dealer-management-system:1.128.0
  groupmanagement: sdsdockerhub/group-management-system:1.46.0
  imsbridge: sdsdockerhub/ers-ims-bridge:1.18.0
  inventorymanagement: sdsdockerhub/inventory-management-system:1.44.0
  kyc: sdsdockerhub/ers-kycsystem:1.60.0
  notificationmanager: sdsdockerhub/ers-notification-manager:1.23.0
  ordermanagement: sdsdockerhub/order-management-system:1.81.0
  productmanagement: sdsdockerhub/product-management-system:1.46.0
  templatemanagement: sdsdockerhub/template-management-system:1.11.1
  identitymanagement: sdsdockerhub/ers-identity-management:1.64.0
  objectstore: sdsdockerhub/object-store-manager:1.13.0
  nginx: sdsdockerhub/nginx-nonroot:v7
  accountlink: sdsdockerhub/ers-accountlinksimulator:3.4.0
  alertapp: sdsdockerhub/ers-alertapp-webservice:1.47.0
  batchscheduling: sdsdockerhub/batch-scheduling-system:1.48.0
  billingsettlement: sdsdockerhub/billing-settlement-system:1.11.0
  filebeat: elastic/filebeat:8.6.0
  ldaplink: sdsdockerhub/ers-ldaplink:1.15.0
  notificationui: sdsdockerhub/ers-notification-ui:1.19.0
  otpmanagement: sdsdockerhub/otp-management-system:1.8.1
  rabbitmq: sdsdockerhub/rabbitmq-ubp:3.10.7
  referencegenerator: sdsdockerhub/ers-reference-generator:1.54.2
  regionmanagement: sdsdockerhub/ers-region-management:1.15.0
  biengine: sdsdockerhub/bi-engine:1.42.0
  cellsim: sdsdockerhub/ers-cell-sim:1.0.0
  redis: image-registry.openshift-image-registry.svc:5000/openshift/redis:latest
  logstash: sdsdockerhub/logstash:8.1.2
  bitdrexporter:

# NUMBER OF REPLICAS
replica:
  coreproxy: 1
  businesslogic: 1
  accountmanagement: 1
  accessmanagement: 1
  contractmanagement: 1
  dealermanagement: 1
  groupmanagement: 1
  imsbridge: 1
  inventorymanagement: 1
  kyc: 1
  notificationmanager: 1
  ordermanagement: 1
  productmanagement: 1
  templatemanagement: 1
  identitymanagement: 1
  objectstore: 1
  nginx: 1
  accountlink: 1
  alertapp: 1
  batchscheduling: 1
  billingsettlement: 1
  ldaplink: 1
  notificationui: 1
  otpmanagement: 1
  rabbitmq: 1
  referencegenerator: 1
  regionmanagement: 1
  biengine: 1
  cellsim: 1
  redis: 1
  logstash: 1
  bitdrexporter: 1

telemetry_jar: opentelemetry-javaagent.jar
telemetry_server:
repo:

#To monitor the load test you need to either via Opentelemetry you need to enable "jar_volume" and then "telemetry_client" variable.
jar_volume: false
telemetry_client: false

resourceApply: false
