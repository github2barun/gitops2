---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs-inventory-management-{{ .Release.Namespace }}
  labels:
    type: local
    name: logs-inventory-management-{{ .Release.Namespace }}
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "{{ .Values.logs }}/inventory-management-system"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-inventory-management-{{ .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  selector:
    matchLabels:
      type: local
      name: logs-inventory-management-{{ .Release.Namespace }}
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name:  inventory-management
  namespace: {{ .Release.Namespace }}
  labels:
    app:  inventory-management
spec:
  replicas: {{ .Values.replica.inventorymanagement }}
  selector:
    matchLabels:
      app:  inventory-management
  template:
    metadata:
      labels:
        app:  inventory-management
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - inventory-management
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: copy-configs
        image: centos
        env:
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: NAMESPACE_LOGS
          value: "{{ .Release.Namespace_logs_enabled }}"
        imagePullPolicy: IfNotPresent
        command: ['bash','/scripts/configs-copy']
        volumeMounts:
        - name: config-dir-main
          mountPath: {{ .Values.conf }}
        - name: vol-cm-main
          mountPath: /main
        - name: vol-cm-inventory-management-main
          mountPath: /inventory-management-main
        - name: vol-cm-inventory-management-audit
          mountPath: /inventory-management-audit
        - name: vol-cm-inventory-management-tdr
          mountPath: /inventory-management-tdr
        - name: vol-cm-inventory-management-scripts
          mountPath: /inventory-management-scripts
        - name: vol-cm-inventory-management-copy
          mountPath: /scripts
      containers:
      - name: inventory-management
        image: {{ .Values.image.inventorymanagement }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 10103
        env:
        - name: DEFAULT_TIME_ZONE
          value: "{{ .Values.timezone }}"
        - name: TZ
          value: "{{ .Values.timezone }}"
        {{- if eq .Values.telemetry_client true }}
        - name: JAVA_TOOL_OPTIONS
          value: "-javaagent:/apmjar/{{ .Values.telemetry_jar }} -Dotel.service.name=inventory-management -Dotel.traces.exporter=zipkin -Dotel.exporter.zipkin.endpoint=http://{{ .Values.telemetry_server }}:9411/api/v2/spans -Dotel.logs.exporter=otlp -Dotel.metrics.exporter=otlp -Dotel.exporter.otlp.endpoint=http://{{ .Values.telemetry_server }}:4318 -Dotel.javaagent.debug=true -Xmx256m"
        {{- end }}
        {{- if eq .Values.resourceApply true }}
        resources:
          limits:
            cpu: '1'
            memory: 3Gi
          requests:
            cpu: '0.5'
            memory: 2Gi
        {{- end }}
        volumeMounts:
        - name: tz-{{ .Values.country }}
          mountPath: /etc/localtime
        - name: config-dir-main
          mountPath: {{ .Values.conf }}
        - name: vol-logs-inventory-management
          mountPath: {{ .Values.logs }}/inventory-management-system
        {{- if eq .Values.jar_volume true }}
        - name: vol-logs-apmjar
          mountPath: /apmjar
        {{- end }}
      volumes:
      - name: tz-{{ .Values.country }}
        hostPath:
          path: /usr/share/zoneinfo/{{ .Values.timezone }}
      - name: vol-cm-main
        configMap:
          name: cm-main
      - name: vol-cm-inventory-management-main
        configMap:
          name: cm-inventory-management-main
      - name: vol-cm-inventory-management-audit
        configMap:
          name: cm-inventory-management-audit
      - name: vol-cm-inventory-management-tdr
        configMap:
          name: cm-inventory-management-tdr
      - name: vol-cm-inventory-management-scripts
        configMap:
          name: cm-inventory-management-scripts
      - name: vol-logs-inventory-management
        persistentVolumeClaim:
          claimName: logs-inventory-management-{{ .Release.Namespace }}
      - name: config-dir-main
        emptyDir: {}
      - name: vol-cm-inventory-management-copy
        configMap:
          name: cm-inventory-management-copy
      {{- if eq .Values.jar_volume true }}
      - name: vol-logs-apmjar
        persistentVolumeClaim:
          claimName: logs-apmjar-{{ .Release.Namespace }}
      {{- end }}
      imagePullSecrets:
      - name: {{ .Values.secret }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: inventory-management
  name: svc-inventory-management
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 10103
    targetPort: 10103
  selector:
    app: inventory-management
  type: ClusterIP
