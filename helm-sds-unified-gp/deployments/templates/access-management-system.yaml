---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: logs-access-management-{{ .Release.Namespace }}
  labels:
    type: local
    name: logs-access-management-{{ .Release.Namespace }}
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "{{ .Values.logs }}/access-management-system"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: logs-access-management-{{ .Release.Namespace }}
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  selector:
    matchLabels:
      type: local
      name: logs-access-management-{{ .Release.Namespace }}
  storageClassName: manual
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: access-management
  namespace: {{ .Release.Namespace }}
  labels:
    app: access-management
spec:
  replicas: {{ .Values.replica.accessmanagement }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge:  40%
       maxUnavailable: 20%
  selector:
    matchLabels:
      app: access-management
  template:
    metadata:
      labels:
        app: access-management
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - access-management
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: copy-configs
        image: centos
        env:
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: NAMESPACE_LOGS
          value: "{{ .Values.Namespace_logs_enabled }}"
        imagePullPolicy: IfNotPresent
        command: ['bash','/scripts/configs-copy']
        volumeMounts:
        - name: config-dir-main
          mountPath: {{ .Values.conf }}
        - name: vol-cm-main
          mountPath: /main
        - name: vol-cm-access-management-main
          mountPath: /access-management-main
        - name: vol-cm-access-management-templates
          mountPath: /access-management-templates
        - name: vol-cm-access-management-audit-templates
          mountPath: /access-management-audit-templates
        - name: vol-cm-access-management-copy
          mountPath: /scripts
      containers:
      - name: access-management
        image: {{ .Values.image.accessmanagement }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8374
        readinessProbe:
          tcpSocket:
            port: 8374
          initialDelaySeconds: 60
          periodSeconds: 20
        livenessProbe:
          tcpSocket:
            port: 8374
          initialDelaySeconds: 60
          periodSeconds: 40
        env:
        - name: DEFAULT_TIME_ZONE
          value: "{{ .Values.timezone }}"
        - name: TZ
          value: "{{ .Values.timezone }}"
        {{- if eq .Values.resourceApply true }}
        resources:
          limits:
            cpu: '1'
            memory: 3Gi
          requests:
            cpu: '0.5'
            memory: 2Gi
        {{- end }}
        volumeMounts:
        - name: tz-{{ .Values.country }}
          mountPath: /etc/localtime
        - name: config-dir-main
          mountPath: {{ .Values.conf }}
        - name: vol-logs-access-management
          mountPath: {{ .Values.logs }}/access-management-system
      volumes:
      - name: tz-{{ .Values.country }}
        hostPath:
          path: /usr/share/zoneinfo/{{ .Values.timezone }}
      - name: vol-cm-main
        configMap:
          name: cm-main
      - name: vol-cm-access-management-main
        configMap:
          name: cm-access-management-main
      - name: vol-cm-access-management-templates
        configMap:
          name: cm-access-management-templates
      - name: vol-cm-access-management-audit-templates
        configMap:
          name: cm-access-management-audit-templates
      - name: vol-logs-access-management
        persistentVolumeClaim:
          claimName: logs-access-management-{{ .Release.Namespace }}
      - name: config-dir-main
        emptyDir: {}
      - name: vol-cm-access-management-copy
        configMap:
          name: cm-access-management-copy
      imagePullSecrets:
      - name: {{ .Values.secret }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: access-management
  name: svc-access-management
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - port: 8374
    targetPort: 8374
  selector:
    app: access-management
  type: ClusterIP
