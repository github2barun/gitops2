###############################################################################
logging.config=file:/opt/seamless/conf/alertapp/log4j2.xml
# Below flag use for ERS and SFO database integration,
# If value is true then it try to create database connection with respected component database
is_ERS=true
is_SFO=false

###############################################################################
# ers alert app database holds view that returns all necessary data for reseller retrieval

alertapp.db_driver=org.mariadb.jdbc.Driver
alertapp.db_url=jdbc:mysql://svc-haproxy:4306/alertapp
alertapp.db_user=refill
alertapp.db_password=refill
alertapp.pool_min_size=1
alertapp.pool_max_size=100
alertapp.pool_query_timeout=300000
alertapp.fetch_timeout=300000
alertapp.pool_prepared_statements=true
alertapp.minimum_idle=2
alertapp.pool_name=alertapp

###############################################################################
# ers accounts database holds view that returns all necessary data for reseller retrieval

accounts.db_driver=org.mariadb.jdbc.Driver
accounts.db_url=jdbc:mysql://localhost:3306/accounts
accounts.db_user=refill
accounts.db_password=refill
accounts.pool_min_size=1
accounts.pool_max_size=100
accounts.pool_query_timeout=300000
accounts.fetch_timeout=300000

###############################################################################
# dataaggregator database holds table std_parent_reseller_aggregation that
# contains information about parent resellers

dataaggregator.db_driver=org.mariadb.jdbc.Driver
dataaggregator.db_url=jdbc:mysql://localhost:3306/dataaggregator
dataaggregator.db_user=refill
dataaggregator.db_password=refill
dataaggregator.pool_min_size=1
dataaggregator.pool_max_size=100
dataaggregator.pool_query_timeout=300000
dataaggregator.fetch_timeout=300000

###############################################################################
# Refill database connection
#
refilldb.db_driver=org.mariadb.jdbc.Driver
refilldb.db_url=jdbc:mysql://svc-haproxy:4306/Refill
refilldb.db_user=refill
refilldb.db_password=refill
refilldb.pool_min_size=1
refilldb.pool_max_size=100
refilldb.pool_query_timeout=300000
refilldb.fetch_timeout=300000

###############################################################################
# Auth-server database connection
#
auth-server.db_driver=org.mariadb.jdbc.Driver
auth-server.db_url=jdbc:mysql://localhost:3306/AUTH_SERVER
auth-server.db_user=refill
auth-server.db_password=refill
auth-server.pool_min_size=1
auth-server.pool_max_size=100
auth-server.pool_query_timeout=300000
auth-server.fetch_timeout=300000

###############################################################################
# Ims-inventory database connection
#
ims-inventory.db_driver=org.mariadb.jdbc.Driver
ims-inventory.db_url=jdbc:mysql://localhost:3306/ims_inventory
ims-inventory.db_user=refill
ims-inventory.db_password=refill
ims-inventory.pool_min_size=1
ims-inventory.pool_max_size=100
ims-inventory.pool_query_timeout=300000
ims-inventory.fetch_timeout=300000

################################################################################


###############################################################################
# Inventory-Management-System database connection
#
ims.db_driver=org.mariadb.jdbc.Driver
ims.db_url=jdbc:mysql://svc-haproxy:4306/inventory_management_system
ims.db_user=refill
ims.db_password=refill
ims.pool_min_size=1
ims.pool_max_size=100
ims.pool_query_timeout=300000
ims.fetch_timeout=300000


################################################################################

###############################################################################
# Group-Management-System database connection
#
groupmanagementsystem.db_driver=org.mariadb.jdbc.Driver
groupmanagementsystem.db_url=jdbc:mysql://svc-haproxy:4306/groupmanagementsystem
groupmanagementsystem.db_user=refill
groupmanagementsystem.db_password=refill
groupmanagementsystem.pool_min_size=1
groupmanagementsystem.pool_max_size=100
groupmanagementsystem.pool_query_timeout=300000
groupmanagementsystem.fetch_timeout=300000

################################################################################

# ERS principal service connection

ersprincipalservice.url=http://svc-coreproxy:8912/principalService
ersprincipalservice.user=alertapp
ersprincipalservice.password=alertapp

################################################################################
# URL port to use to export suggested stock connection
#Default port is 8765
suggestedstock.port= 8765

###############################################################################
# Monitored reseller type list separated by space. Only those resellers will
# have balance checked.
# NOTE: this should be kept in order of hierarchy in system

monitored_reseller_types= operator treasury distributor subdistributor reseller p2p

###############################################################################
# Monitored account type list separated by space. Only those accounts will
# have balance checked.

monitored_account_types= RESELLER

######################################################################################
# Set multiple types to send sms to reseller contact msisdn instead of reseller msisdn
# Note: set comma separated reseller type id.
######################################################################################
reseller_types_for_send_sms_to_contact_msisdn=reseller,p2p

###############################################################################
#The reseller type mentioned here will use relative comparison for low stock alert
relativeComparison = operator treasury distributor subdistributor reseller p2p

###############################################################################
# Reseller stock level which will trigger alert sms to reseller himself
# Stock level is the balance of the reseller in lowest currency
# Ex: alert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
#
# Assuming the following reseller types are defined in the system.
# MTN (Top level Reseller)
# SC (Service center Reseller)
# SCC (Subservice center Reseller)
# MD (Master dealer Reseller)
# SD (Subdealer Reseller)
# POS (Point of sale)
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
alert_stock_level.default=2000
#alert_stock_level.SC=1000
#alert_stock_level.SCC=900
#alert_stock_level.MD=800
#alert_stock_level.SD=700
#alert_stock_level.POS=2000
#alert_stock_level.default.region1.default.default=600
#alert_stock_level.SC.region1.default.default=500
#alert_stock_level.SC.default.zone1.default=400
#alert_stock_level.SC.default.default.sector1=300

###############################################################################
# Reseller stock level which will trigger alert sms to parent
# Stock level is the balance of the reseller in lowest currency
# Ex: parentalert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
# Normally parent alert level is higher than reseller alert level
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
parentalert_stock_level.default=25000
#parentalert_stock_level.SC=1200
#parentalert_stock_level.SCC=920
#parentalert_stock_level.MD=820
#parentalert_stock_level.SD=25000
#parentalert_stock_level.POS=2000
#parentalert_stock_level.default.region1.default.default=600
#parentalert_stock_level.SC.region1.default.default=500
#parentalert_stock_level.SC.default.zone1.default=400
#parentalert_stock_level.SC.default.default.sector1=300

###############################################################################
# Reseller stock level which will trigger alert sms to account manager
# Stock level is the balance of the reseller in lowest currency
# Ex: accountManageralert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
# Normally parent alert level is higher than reseller alert level
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
accountManageralert_stock_level.default=500
#accountManageralert_stock_level.SC=1200
#accountManageralert_stock_level.SCC=920
#accountManageralert_stock_level.MD=820
#accountManageralert_stock_level.SD=25000
#accountManageralert_stock_level.POS=2000

###############################################################################


###############################################################################
# Reseller stock level which will trigger alert sms to region representative
# Stock level is the balance of the reseller in lowest currency
# Ex: regionRepresentativealert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
# Normally parent alert level is higher than reseller alert level
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
regionRepresentativealert_stock_level.default=500
#regionRepresentativealert_stock_level.SC=1200
#regionRepresentativealert_stock_level.SCC=920
#regionRepresentativealert_stock_level.MD=820
#regionRepresentativealert_stock_level.SD=25000
#regionRepresentativealert_stock_level.POS=2000
#regionRepresentativealert_stock_level.default.region1.default.default=600
#regionRepresentativealert_stock_level.SC.region1.default.default=500
#regionRepresentativealert_stock_level.SCC.region1.default.default=400
#regionRepresentativealert_stock_level.SC.region2.default.default=300

###############################################################################

###############################################################################
# Reseller stock level which will trigger alert sms to zone representative
# Stock level is the balance of the reseller in lowest currency
# Ex: zoneRepresentativealert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
# Normally parent alert level is higher than reseller alert level
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
zoneRepresentativealert_stock_level.default=500
#zoneRepresentativealert_stock_level.SC=1200
#zoneRepresentativealert_stock_level.SCC=920
#zoneRepresentativealert_stock_level.MD=820
#zoneRepresentativealert_stock_level.SD=25000
#zoneRepresentativealert_stock_level.POS=2000
#zoneRepresentativealert_stock_level.default.default.zone1.default=600
#zoneRepresentativealert_stock_level.SC.default.zone1.default=500
#zoneRepresentativealert_stock_level.SCC.default.zone1.default=400
#zoneRepresentativealert_stock_level.SC.default.zone1.default=300

###############################################################################

###############################################################################
# Reseller stock level which will trigger alert sms to sector representative
# Stock level is the balance of the reseller in lowest currency
# Ex: sectorRepresentativealert_stock_level.default=100 means 100 XOF
# The stock level can define per reseller type or global using default
# Stock level for reseller type will override default one
# Normally parent alert level is higher than reseller alert level
#
# When there is no level set per reseller type,
# default value will be used.
#NOTE: if relativeComparison is enabled for a reseller type then stock level for
#that reseller type should be defined here in range 0-1. By default it should be 1,
#any value less than 1 will be used to bring threshold level down
#
# default level must be set
sectorRepresentativealert_stock_level.default=500
#sectorRepresentativealert_stock_level.SC=1200
#sectorRepresentativealert_stock_level.SCC=920
#sectorRepresentativealert_stock_level.MD=820
#sectorRepresentativealert_stock_level.SD=25000
#sectorRepresentativealert_stock_level.POS=2000
#sectorRepresentativealert_stock_level.default.default.default.sector1=600
#sectorRepresentativealert_stock_level.SC.default.default.sector1=500
#sectorRepresentativealert_stock_level.SCC.default.default.sector1=400
#sectorRepresentativealert_stock_level.SC.default.default.sector1=300


###############################################################################

# SMS provider connection, by default assumes kannel is running on the same host
# with standard configuration
smsprovider.classname=HttpSMSProvider
smsprovider.url=http://svc-haproxy:13013/cgi-bin/sendsms?username=ers&password=recharge&from=1234

###############################################################################
# Product SKU used by parents to transfer credits to resellers
# These products used for fetching latest parents this reseller
products_used_by_parent=62,63,162,64

###############################################################################
# Configuration for CMS
default_language=en
# This is the only supported CMS type right now, dont change this!
cms.classname=SimpleFileCMS
# The supported languages
cms.languages=en fr
# File containing the english(en) translations
cms.en.filename=alertapp_messages_english.properties
# Encoding for the english translations
cms.en.encoding=ISO-8859-1
# File containing the french translations
cms.fr.filename=alertapp_messages_french.properties
# Encoding for the french translations
cms.fr.encoding=UTF-8

############################# Locale configuration #############################
default_encoding=UTF-8
#default_encoding=ISO-8859-1
#
language_encodings.en=UTF-8
#
language_encodings.pt=UTF-8
#language_encodings.pt=ISO-8859-1

# MSISDN settings
#Default network code padded to msisdn in case entered msisdn less than digits of default_country_code_digit + default_network_code_digits + subscriber_number_digits
locale.default_country_code=880
#Default network code padded to msisdn in case entered msisdn less than digits of default_network_code_digits + subscriber_number_digits
locale.default_network_code=17
#Length of msisdn excluding network code and country code
locale.subscriber_number_digits=8
#Optional properties to set range of allowed network_codes.
locale.accepted_network_codes=17

# Does a number that starts with a network code require a leading '0'?
# (0 will not be counted as part the the network code and will be removed from the MSISDN)
locale.network_code_requires_0_prefix=true


# The currency to use
# All amounts entered will be assumed to be in this currency
default_currency=BDT

locale.custom_currency.BDT=2

# Currency settings
#Decimal separator
locale.decimal_separator=.
#Thousand separator
locale.thousand_separator=,

##################### Message Resource Properties ########################
locale.message.path=/opt/seamless/conf/alertapp
locale.message.prefix=messages
locale.message.defaultLocale=en-GB
locale.message.supportedLocale=en-GB,en-US

###############################################################################
# Jobs
#
# Jobs to run on the scheduler
#

jobs = stock_alert,voucher_stock_alert,agent_supervisor_sms_alert,agent_supervisor_email_alert,product_low_stock_alert_generator,update_balance_threshold_job,send_low_balance_alert_job,process_alert_queue_job,reseller_inactivity_alert_job
#jobs = sfo_stock_level

###############################################################################
#------- Stock level alerts interval --------
####
## Example Quartz cron schedules:
##
## 0 0 12 * * ?			Fire at 12pm (noon) every day
##
## 0 15 10 ? * *		Fire at 10:15am every day
##
## 0 * 14 * * ?			Fire every minute starting at 2pm and ending at 2:59pm, every day
##
## 0 0/5 14 * * ?		Fire every 5 minutes starting at 2pm and ending at 2:55pm, every day
##
## 0 15 10 ? * MON-FRI	Fire at 10:15am Monday to Friday
##
## 0 15 10 15 * ?		Fire at 10:15am on the 15th day of every month
##
## 0 15 10 L * ?		Fire at 10:15am on the last day of every month
##
## 0 15 10 ? * 6L		Fire at 10:15am on the last Friday of every month
##
## 0 15 10 ? * 6#3		Fire at 10:15am on the third Friday of every month
##
## Fire every hour Monday to Friday
##
# schedule = 0 0 0/1 ? * MON-FRI
# Use this Cron Expression Generator & Explainer - Quartz
# https://www.freeformatter.com/cron-expression-generator-quartz.html#cronconverttotext
# Alert groups
# stock_alert.group = STOCK_BALANCE stock level for reseller balance
# stock_alert.group = VOUCHER_STOCK voucher stock for MTN
# update_balance_threshold_job.group = UPDATE_BALANCE_THRESHOLD for update reseller balance threshold by database configuration
# send_low_balance_alert_job.group = SEND_LOW_BALANCE_ALERT for send Low Balance Alert according to Database Configuration
# reseller_inactivity_alert_job.group = SEND_RESELLER_INACTIVITY_ALERT for send alert to reseller not active.

stock_alert.group = STOCK_BALANCE
# Simple subject line
stock_alert.subjectLine = Low stock alert
stock_alert.schedule=0 0/30 * * * ?
# Top level's Email recipients separated by comma(,) in case of multiple emails, fill in and uncomment
stock_alert.emailTo = <EMAIL TO>
# Fill in valid mail server host
stock_alert.mailServerHost = sdsmailrelay.dev.ts
# Put the port that the SMTP server runs on
stock_alert.mailServerPort = 25
# Who the email is from
stock_alert.fromEmail = sdsmailrelay.dev.ts
stock_alert.actions = EMAIL, SMS
stock_alert.currency = BDT
stock_alert.isAuthEnabled = false
stock_alert.isQuitWaitEnabled = false
stock_alert.isStartTlsEnabled = true

# An optional email password, the SMTP server may require this
#alertapp.fromPassword =
# Empty Body Line
stock_alert.bodyLine =

###############################################################################
#------- Top Level Numbers --------

#add top level MSISDN separated by comma(,) in case of multiple numbers, fill in and uncomment
stock_alert.top_level_MSISDN =

# Override the above configuration for specific reseller type
# Top level MSISDN separated by comma(,) in case of multiple numbers, fill in and uncomment
#stock_alert.top_level_MSISDN.<reseller-type> =

###############################################################################
#------- Number of days for sampling --------
stock_alert.number_of_days=4
stock_alert.sampling_days=5
stock_alert.estimated_days=7
stock_alert.percentage=20

###############################################################################
#=================Job for update reseller balance threshold by database configuration=============
update_balance_threshold_job.group = UPDATE_BALANCE_THRESHOLD
update_balance_threshold_job.subjectLine = Update balance threshold
update_balance_threshold_job.schedule=0 0/30 * * * ?
update_balance_threshold_job.checkLifelineStatus=false
update_balance_threshold_job.fields.isLegacy=true
update_balance_threshold_job.fields.queryLimit=250
update_balance_threshold_job.fields.updateResellerPerRequestSize=70
update_balance_threshold_job.fields.sendAsyncRequestSize=5
update_balance_threshold_job.fields.dailyTransQueryParam=resellerTypeId,accountTypeId,resellerIds,days
update_balance_threshold_job.fields.dailyTransQuery=SELECT ifnull(SUM(transactionAmount),0) AS transactionAmount, resellerId, account_type as accountTypeId FROM std_sales_trend_aggregation where resellerTypeId=? and account_type=? and resellerId in ({resellerIds}) and (aggregationDate between date_sub(curdate(),INTERVAL ? DAY) and curdate()) group by resellerId, account_type
update_balance_threshold_job.currency = ZMK
#=================Low Balance Alert Job according to Database Configuration=============
###############################################################################

###############################################################################
#=================Job for send Low Balance Alert according to Database Configuration=============
send_low_balance_alert_job.group = SEND_LOW_BALANCE_ALERT
send_low_balance_alert_job.subjectLine = Low balance alert
send_low_balance_alert_job.schedule=0 0/30 * * * ?
send_low_balance_alert_job.checkLifelineStatus=false
send_low_balance_alert_job.fields.isLegacy=true
send_low_balance_alert_job.fields.queryLimit=250
send_low_balance_alert_job.fields.dailyTransQueryParam=resellerTypeId,accountTypeId,resellerIds,days
send_low_balance_alert_job.fields.dailyTransQuery=SELECT ifnull(SUM(transactionAmount),0) AS transactionAmount, resellerId, account_type as accountTypeId FROM std_sales_trend_aggregation where resellerTypeId=? and account_type=? and resellerId in ({resellerIds}) and (aggregationDate between date_sub(curdate(),INTERVAL ? DAY) and curdate()) group by resellerId, account_type
send_low_balance_alert_job.mailServerHost = sdsmailrelay.dev.ts
send_low_balance_alert_job.mailServerPort = 25
send_low_balance_alert_job.fromEmail = demo@seamless.se
send_low_balance_alert_job.currency = ZMK
#=================Low Balance Alert Job by database Configuration=============
###############################################################################

###############################################################################
#=================Job for send pending alert=============
process_alert_queue_job.group = PROCESS_ALERT_QUEUE
process_alert_queue_job.subjectLine = Low balance alert
process_alert_queue_job.schedule=0 0/30 * * * ?
process_alert_queue_job.checkLifelineStatus=false
process_alert_queue_job.fields.isLegacy=true
process_alert_queue_job.fields.dailyTransQueryParam=resellerTypeId,accountTypeId,resellerIds,days
process_alert_queue_job.fields.dailyTransQuery=SELECT ifnull(SUM(transactionAmount),0) AS transactionAmount, resellerId, account_type as accountTypeId FROM std_sales_trend_aggregation where resellerTypeId=? and account_type=? and resellerId in ({resellerIds}) and (aggregationDate between date_sub(curdate(),INTERVAL ? DAY) and curdate()) group by resellerId, account_type
process_alert_queue_job.mailServerHost = sdsmailrelay.dev.ts
process_alert_queue_job.mailServerPort = 25
process_alert_queue_job.fromEmail = demo@seamless.se
process_alert_queue_job.currency = ZMK
#=================Job for send pending alert=============
###############################################################################

###############################################################################
#=================Job for send Reseller Inactivity Alert=============
reseller_inactivity_alert_job.group = SEND_RESELLER_INACTIVITY_ALERT
reseller_inactivity_alert_job.subjectLine = Inactivity Alert
reseller_inactivity_alert_job.schedule=0 0/30 * * * ?
reseller_inactivity_alert_job.fields.isLegacy=true
reseller_inactivity_alert_job.fields.resellerTypes=distributor,subdistributor,reseller,p2p
reseller_inactivity_alert_job.fields.accountTypes=RESELLER
reseller_inactivity_alert_job.fields.defaultReceiverRole=Reseller_admin
reseller_inactivity_alert_job.fields.defaultInactivityDays=3
reseller_inactivity_alert_job.fields.receiver.<reseller type>=<Role Ids Comma separated>
reseller_inactivity_alert_job.fields.inactivityDays.<reseller type>=3
reseller_inactivity_alert_job.fields.queryLimit=250
reseller_inactivity_alert_job.actions =EMAIL,SMS
reseller_inactivity_alert_job.currency = ZMK
#=================Job for send Reseller Inactivity Alert=============
###############################################################################

###############################################################################
#------- Voucher Stock alerts  --------
####
# voucher_stock_alert.1.denomination = <product in-price-value i.e 10.00>
# voucher_stock_alert.1.threshold = <threshold values i.e 50>
# voucher_stock_alert.actions = EMAIL, SMS Right now only EMAIL and SMS supported
# stock_alert.group = STOCK_BALANCE stock level for reseller balance
# stock_alert.group = VOUCHER_STOCK voucher stock for MTN

voucher_stock_alert.group = VOUCHER_STOCK
voucher_stock_alert.1.denomination = 10.00
voucher_stock_alert.1.threshold = 10

voucher_stock_alert.2.sku = 450016
voucher_stock_alert.2.threshold = 985
voucher_stock_alert.2.average_product_delivery_days = 1
voucher_stock_alert.2.product_buffer_days = 1
#Local action for this threshold.
voucher_stock_alert.2.actions = EMAIL, SMS
voucher_stock_alert.2.emailTo = sdsmailrelay.dev.ts
voucher_stock_alert.2.smsTo=+4520010000

voucher_stock_alert.3.supplier=IDT
voucher_stock_alert.3.threshold = 995
voucher_stock_alert.3.average_product_delivery_days = 1
voucher_stock_alert.3.product_buffer_days = 1
voucher_stock_alert.3.actions = EMAIL, SMS
voucher_stock_alert.3.emailTo = sdsmailrelay.dev.ts
voucher_stock_alert.3.smsTo=+4520010025

voucher_stock_alert.schedule = 0 59 23 ? * *
voucher_stock_alert.actions = EMAIL, SMS
voucher_stock_alert.emailTo = <TO EMAIL ID>
voucher_stock_alert.subjectLine = Alert! Low Voucher Stock-
voucher_stock_alert.currency = ZMK
voucher_stock_alert.fromEmail = sdsmailrelay.dev.ts
voucher_stock_alert.mailServerHost = sdsmailrelay.dev.ts
voucher_stock_alert.mailServerPort = 25
voucher_stock_alert.smsFrom=<FROM SMS ADDRESS>
voucher_stock_alert.smsTo=<TO SMS ADDRESS>

#Default value is from reseller's sub group
account_manager_expression=${groupIds[1]}
#Default value is from reseller's group
region_representative_expression=${groupIds[0]}
#Default value is from reseller's sub group
zone_representative_expression=${groupIds[1]}
#Default value is from reseller's sub-sub group
sector_representative_expression=${groupIds[2]}

representative.region.region1.msisdn=
representative.zone.zone1.msisdn=
representative.sector.sector1.msisdn=

representativemail.region.congo.emailid=
representativemail.zone.zone1.emailid=
representativemail.sector.sector1.emailid=

#Allow alert corresponding to reseller type ID
allowstockalert.region=
allowstockalert.zone=
allowstockalert.sector=
#allowstockalert.reseller=operator,treasury,distributor,subdistributor,reseller,p2p
allowstockalert.reseller.region=
allowstockalert.reseller.zone=
allowstockalert.reseller.sector=
#allowstockalert.parent=operator,treasury,distributor,subdistributor,reseller,p2p
allowstockalert.parent.region=
allowstockalert.parent.zone=
allowstockalert.parent.sector=
#allowstockalert.accountmanager=distributor,reseller


###############################################################################
#------- Agent and Supervisor Performance Report --------
###############################################################################

agent_supervisor_sms_alert.group = AGENT_SUPERVISOR_SMS
agent_supervisor_sms_alert.date.format = dd-MM-yyyy

#Other Supported formats are {dd-MM-yyyy hh:mm}, {MM-dd-yyyy hh:mm:ss}, {yyyy-dd-MM hh:mm:ss}
agent_supervisor_sms_alert.period.format = hh:mm
agent_supervisor_sms_alert.period.second = 3600
agent_supervisor_sms_alert.period.delimiter = -  

agent_supervisor_sms_alert.schedule = 0 0 * * * ? 
agent_supervisor_sms_alert.actions = SMS

agent_supervisor_email_alert.group = AGENT_SUPERVISOR_EMAIL
agent_supervisor_email_alert.date.format = dd-MM-yyyy
agent_supervisor_email_alert.period.format = hh:mm:ss
agent_supervisor_email_alert.period.second = 3600

agent_supervisor_email_alert.schedule = 0 0 * * * ? 
agent_supervisor_email_alert.actions = EMAIL
#Multiple email id can be given by comma(,) separated values
agent_supervisor_email_alert.emailTo = <FROM EMAIL ID LIST>
agent_supervisor_email_alert.subjectLine = Hourly Sales Market Visit Report
agent_supervisor_email_alert.fromEmail = sdsmailrelay.dev.ts
agent_supervisor_email_alert.mailServerHost = sdsmailrelay.dev.ts
agent_supervisor_email_alert.mailServerPort = 25

###############################################################################
#------- Pending credit transfer alert to specified users --------
###############################################################################

credit_transfer_approval.group = credit_transfer_approval

credit_transfer_approval.schedule = 0 0 10 ? * * 
credit_transfer_approval.actions = EMAIL
#Multiple Email IDs can be given by comma(,) separated values
credit_transfer_approval.emailTo =sdsmailrelay.dev.ts
credit_transfer_approval.subjectLine = Pending transaction awaiting
credit_transfer_approval.fromEmail =sdsmailrelay.dev.ts
credit_transfer_approval.mailServerHost = sdsmailrelay.dev.ts
credit_transfer_approval.mailServerPort = 25
credit_transfer_approval.profile =CREDIT_TRANSFER
credit_transfer_approval.channel=webadmin

###############################################################################
#------- Daily SMS with Balance and sales to distributor --------

reseller_hierarchy_detail.group = RESELLER_HIERARCHY_DETAILS
reseller_hierarchy_detail.actions = SMS
reseller_hierarchy_detail.smsFrom=<FROM SMS ADDRESS>
reseller_hierarchy_detail.prop.format=dd-MM-yyyy
reseller_hierarchy_detail.prop.resellerType=distributor
reseller_hierarchy_detail.prop.level=1

reseller_hierarchy_detail.schedule = 0 0 10 ? * *

###############################################################################
#------- Alert count configurations --------
###############################################################################
############## You need to define delay in seconds,minutes,hours or days ######
############### s for second,m for minute and h for hour
#######like alert_counter.stock_alerts.default_delay=1s, at a time you can give only one value
#####(i-e) 20s or 3d or 20 h etc
#------- Alert delay configurations --------

alert_counter.enable=false
alert_counter.stock_alerts.reseller.max_alerts=5
alert_counter.stock_alerts.reseller.delay=0s
alert_counter.stock_alerts.parent_reseller.max_alerts=5
alert_counter.stock_alerts.parent_reseller.delay=0s
alert_counter.stock_alerts.region.max_alerts=5
alert_counter.stock_alerts.region.delay=0s
alert_counter.stock_alerts.zone.max_alerts=5
alert_counter.stock_alerts.zone.delay=0s
alert_counter.stock_alerts.sector.max_alerts=5
alert_counter.stock_alerts.sector.delay=0s
alert_counter.stock_alerts.account.max_alerts=5
alert_counter.stock_alerts.account.delay=0s

# Make Resolve principal service call optional for REGION, ZONE and SECTOR
is_resolve_principal_enabled=false

#This scheduler will check balance and update alert jobs
balance_check_sheduler.enable=false
balance_check_sheduler.cron=0 0/10 * * * ?

#SFO Alert App Config
sfo_stock_level.group=sfo_stock_level
sfo_stock_level.date.format=dd-MM-yyyy
sfo_stock_level.period.format=hh:mm:ss
sfo_stock_level.period.second=3600
sfo_stock_level.schedule=0 0 10 ? * *
sfo_stock_level.actions=EMAIL
#Multiple Email IDs can be given by comma(,) separated values
sfo_stock_level.subjectLine=SFO Stock Level Alert
sfo_stock_level.fromEmail=se.vms@seamless.se
sfo_stock_level.fromPassword=seamless123
sfo_stock_level.mailServerHost=sdsmailrelay.dev.ts
sfo_stock_level.mailServerPort=25
sfo_stock_level.threshold.reseller=100
sfo_stock_level.threshold.pos=100
sfo_stock_level.allowed.workflow.state.reseller=Available
sfo_stock_level.allowed.workflow.state.pos=Available,Delivered


#############  -- AlertAppWebService Config -- ############################

server.servlet.context-path=/alertapp
server.port=8375

aletapp.http.response.headers=authorization,system-token

############# CORS config ####################
cors.enable=false
#comma separated origin list
cors.allowedorigins=*

##swagger-url: http://localhost:8375/alertapp/swagger-ui/

############################################################################


#SFO Alert App Config
product_low_stock_alert_generator.group=product_low_stock_alert_generator
product_low_stock_alert_generator.schedule=0 21,30,45 * ? * *

## Can be Email or SMS and both like: EMAIL,SMS
product_low_stock_alert_generator.actions=EMAIL
#Multiple Email IDs can be given by comma(,) separated values
product_low_stock_alert_generator.subjectLine=Stock Level Alert
product_low_stock_alert_generator.fromEmail=se.vms@seamless.se
product_low_stock_alert_generator.fromPassword=seamless123
product_low_stock_alert_generator.mailServerHost=sdsmailrelay.dev.ts
product_low_stock_alert_generator.mailServerPort=25
product_low_stock_alert_generator.mailSslProtocol=TLSv1.2
#Alert will not be sent to the types and resellerIds mentioned in this list.
#product_low_stock_alert_generator.alertExclusionList=
product_low_stock_alert_generator.fetchGroupHierarchy=Y

# When value == 0 alert will be generated to the owner only
# When value < 0 alert will be generated to all level parents in hierarchy
# When value > 0 it will only send alert to parents in hierarchy upto that level
product_low_stock_alert_generator.fetchAncestorUpToLevel=0

#### Product Low Stock MultiThreaded Configurations ####

##  Batch Size: How many resellers will be fetched from Refill simultaneously
product_low_stock_alert_generator.fetch_owner_batch_size = 500

## Thread pool size for fetching the owner details
product_low_stock_alert_generator.fetch_owner_product_details_sub_task_threadpool_size = 10

## Queue size for preprocessing the details, such as fetching stock details from IMS
product_low_stock_alert_generator.preprocessing_owner_queue_size = 20
## Queue size for passing the owner details to processor thread
product_low_stock_alert_generator.to_be_processed_owner_queue_size = 20

## Sleep time for waiting the preprocessing thread, if no element present to perform preprocessing
product_low_stock_alert_generator.process_product_stock_sub_processor_sleep_time_in_millis = 100
## Sleep time for waiting the preprocessing thread, if no element present to perform processing/sending alert logic
product_low_stock_alert_generator.fetch_owner_product_details_task_sleep_time_in_millis = 100
######################################################################################

####### Live/Offline alerts configured ####
isSendOfflineAlerts = False

### Component endpoints configuration
components.endpoints.dealer_management_system=http://svc-dealer-management:8033/dms/auth
components.endpoints.notification_management_system=http://svc-notification-manager:8277
components.endpoints.product_management_system=http://svc-product-management:8012

############### Connection properties for rest client ###############
##Connection properties for rest client
#Http Client settings(these configuration will be used while connecting to flytext server)
http.client.max_total_connections=200
#Http Client connections per route
http.client.max_connections_per_route=15
#Timeout (in millis) until a connection is established with the remote host
http.client.connection_timeout=30000
#Timeout (in millis) while waiting for data after the connection was established
http.client.socket_timeout=50000
#Retry count, when there is a failure in establishing the connection
http.client.retry_count=1

message_delimiter_for_parent=\\|

############# filter support ############
default.data.fetch.default.perPage=10
default.data.fetch.default.page=1
threshold.fetch.filter.map={'resourceOwnerId':'resourceOwnerId', 'resourceOwnerType':'resourceOwnerType','resourceType':'resourceType','threshold':'threshold', 'resourceId':'resourceId'}
threshold.fetch.sort.map={'resourceOwnerId':'resourceOwnerId', 'resourceOwnerType':'resourceOwnerType','resourceType':'resourceType','threshold':'threshold', 'resourceId':'resourceId'}
default.sort.key=threshold