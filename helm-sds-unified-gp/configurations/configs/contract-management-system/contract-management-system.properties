# Properties for module contract-management-system
# Properties for module contract-management-system

# Core single sign-on URL
#
singleSignonSystemURL=http://localhost:8911/singleSignon
# Decide wether the support ui should authenticate the user session
# with the core system
# Only turn this off for testing and debugging
# (to be able to run the support ui without core)
#

checkCoreAuthentication=false
# This configuration is to reduce the probability of authentication failure
# from Singlesignon.
# Singlesignon fails occasionally since session data is not immediately
# written to db. This configuration will allow to retry few times with some
# delay hoping that session data is written to db by that time.
authentication.maxRetries=3
authentication.delay=3000
# Default user id and role if authentication is not enabled
unAuthenticatedUserId=nobody
unAuthenticatedUserRole=norole

server.port=38082
#spring.application.name=contract-management-system
server.servlet.context-path=/acms

#server.servlet.context-path=/contractmanagement
spring.datasource.url=jdbc:mariadb://svc-haproxy:4306/contractmanagement
spring.datasource.username=refill
spring.datasource.password=refill
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.jpa.hibernate.ddl-auto=create-drop

#enable flag to true in order to view sql query logs
#spring.jpa.show-sql=false

cache.cluster.1.url=redis:
## for ssl use rediss
#cache.cluster.1.url=rediss:
useCache=false
cache.timeout=30000
cache.cluster.namespace=contract-management
## For username and password of redis
#cache.username=default
#cache.password=123456789123456789

# Core allowed URL we can add multiple comma separated value
#cors.mapping.origins=http://localhost:3001

# Core exposed header we can add multiple comma separated value
cors.mapping.exposeHeaders=X-Total-Count

management.endpoints.web.exposure.include=*
management.endpoints.web.base-path=/management

#Flag to enable products, resellerTypes fetching from pms, dms modules
enableUnifiedProductContract=true

# Businesslogic connection configuration
ers.connections.businessLogic.url=http://svc-businesslogic:8922/businessLogic
ers.connections.businessLogic.userName=username
ers.connections.businessLogic.password=password

# Default configuration for calculate pricing API
businessLogic.default.sender.walletType=RESELLER
businessLogic.default.receiver.walletType=RESELLER
businessLogic.default.currency=BDT
businessLogic.default.minor.currency.decimal=0
businessLogic.default.minor.currency.code=1

##We can override the pricing calculation by operationType parameter instead of actual product SKU.
#The calculatePricing API will expect a parameter 'operationType=SALE_DEVICE' which will be considered as a product variant
#To enable this feature, write the condition(s) which when satisfied
# overrides the sku with the one specified in 'newSKUKey' key of extrafields
#businessLogic.skippedProductTypes.<index>.condition=operationType:SALE_DEVICE,productType:Serialized
#businessLogic.overrideProductSKU.<index>.newSKUKey=operationType
#businessLogic.overrideProductSKU.1.condition=operationType:SALE_DEVICE,productType:serialized
#businessLogic.overrideProductSKU.1.newSKUKey=operationType
#businessLogic.overrideProductSKU.2.condition=operationType:SALE_DEVICE_PROMO,productType:serialized
#businessLogic.overrideProductSKU.2.newSKUKey=operationType


# Dealer Management System url to call rest services
ers.connections.dealerManagementSystem.url=http://svc-dealer-management:8033/dms/v1/
ers.connections.dealerManagementSystem.authorization=123456
ers.connections.dealerManagementSystem.systemToken={"ersReference":"NM2905221534012155","startTime":1653838460,"rootComponent":"acms","context":{"client":{"channel":"SEAMLESS-UNIFIED"},"initiator":{"uid":"operator","typ":"RESELLERUSERNAME","rtp":"OPERATOR","rid":"operator","roleId":"Reseller_admin","rmsisdn":"8801711111110","resellerPath":"operator"}}}
ers.connections.dealerManagementSystem.AuthUrl=http://svc-dealer-management:8033/dms/auth/
dealerManagementSystemAuth.bulkFetchResellerInfoUri=getBulkResellerInfo

# Product Management System url to call rest services
ers.connections.productManagementSystem.url=http://svc-product-management:8012/pms/v1/

# Region Management System url to call rest services
ers.connections.regionManagementSystem.url=http://svc-region-management:8000/rgms/v1/region/

# Account Management System url to call rest services
ers.connections.accountManagementSystem.url=http://svc-account-management:8092/ams/v1/management/

# Deferred contract commission pay out options. The options are comma separated and every option contains 3 value with | and : separated.
# In case a possible pay-out date is over for a current month, system will send next month date.
deferredTimeSpans=Start of the month|start:1,Quad of the month|quad:10,Mid of the Month|mid:15,End of the Month|end:30

deferredtimespan.property[0].key=start
deferredtimespan.property[0].value=Start of the month
deferredtimespan.property[0].dayOfTheMonth=1

deferredtimespan.property[1].key=quad
deferredtimespan.property[1].value=Quad of the month
deferredtimespan.property[1].dayOfTheMonth=10

deferredtimespan.property[2].key=mid
deferredtimespan.property[2].value=Mid of the month
deferredtimespan.property[2].dayOfTheMonth=15

deferredtimespan.property[3].key=end
deferredtimespan.property[3].value=End of the month
deferredtimespan.property[3].dayOfTheMonth=30

#To segregate the commission related rows, a list of tags that specifies the commission should be given.
#These coma separated strings are 'case-sensitive'.
#For the rows that has these tags commission payout date will be calculated according to the 'deferredtimespan' properties.
contract.commission.tags=SENDER_COMMISSION,COMMISSION

# To define extended contract rules we need to configure condition, conditionType, options and requestObjectParam per condition.
# The requestObjectParam always indicate a key where we can get the desire value from extraFields(MAP<Key, Value>) Object.
# To introduce a new condition e.g 'operationType' then we will follow configuration like paymentMode.
# To define date or time range condition we can follow 'transactionDate' and supported date pattern 'yyyy-MM-dd HH:mm:ss' and time patter 'HH:mm:ss'.
# At present system can support single selection condition and date-range(transactionDate) or time-range(transactionTime) range condition.

rule.property[0].condition=valueType
rule.property[0].conditionType=drop-down
rule.property[0].conditionOptions=per,abs,exp
rule.property[0].requestObjectParam=
rule.property[0].hint=<Value type supported by freemarker template>

rule.property[1].condition=paymentMode
rule.property[1].conditionType=drop-down
rule.property[1].conditionOptions=cash,card,mpesa
rule.property[1].requestObjectParam=extraFields.paymentMode
rule.property[1].hint=<Mode of payment like cash or card or something>

rule.property[2].condition=paymentAgreement
rule.property[2].conditionType=drop-down
rule.property[2].conditionOptions=upfront,consignment,transaction
rule.property[2].requestObjectParam=extraFields.paymentAgreement
rule.property[2].hint=<An agreement of payment like upfront or consignment or something>

rule.property[3].condition=transactionDate
rule.property[3].conditionType=date-range
rule.property[3].conditionOptions=fromDate&toDate
rule.property[3].requestObjectParam=extraFields.transactionDate
rule.property[3].hint=<A date range which include two dates '&' separated>

rule.property[4].condition=receiverType
rule.property[4].conditionType=reseller_type_dynamic_drop-down
rule.property[4].conditionOptions=http://svc-contract-management:38082/acms/reseller-type/
rule.property[4].requestObjectParam=extraFields.receiverType
rule.property[4].hint=<The receiver reseller-type>

rule.property[5].condition=transactionTime
rule.property[5].conditionType=time-range
rule.property[5].conditionOptions=fromTime&toTime
rule.property[5].requestObjectParam=extraFields.transactionTime
rule.property[5].hint=<A time range which include two times '&' separated>

rule.property[6].condition=weekDay
rule.property[6].conditionType=drop-down
rule.property[6].conditionOptions=Sun,Mon,Tue,Wed,Thu,Fri,Sat
rule.property[6].requestObjectParam=extraFields.transactionDate
rule.property[6].hint=<A day of week >

# This will enable contract search including resellerType = 0.
# i.e When someone searching contract with resellerType=5 or some other value,
# then along with that search result for resellerType=0 will be added.
enableAllResellerTypeContractSearch=true

#############  P2P Support ##############
# reseller tag for P2P topup.
pricing.topupTagP2p=P2P

############# Audit trail data feed ##############
auditFeed.componentName=acms
auditFeed.eventType=audit
auditFeed.version=1
# list of events can be either `INCLUDE` or `EXCLUDE`
audit.feed.list.type=EXCLUDE
# comma separated list
audit.feed.list.events=
# Enable or disable from and to diff for audit objects
auditFeed.events.with.changes.enabled=false
# list of events can be either `INCLUDE` or `EXCLUDE`
auditFeed.events.with.changes.type=EXCLUDE
# comma separated list of events to enable audit comparison
auditFeed.events.with.changes.list=

#------- Scc live data ingester configs
scc.live.data.ingestor.baseUri=http://localhost:9598
scc.live.data.ingestor.restApiUri=/scc-live-data-ingestor/data/v1/ingestData
scc.live.data.ingestor.eventSourceType=auditFieldComparison

############# Loss Of Precision properties #############
## In case of repetitive arithmetic operations of multiply or divide, the decimal values might not
## sum up to the actual amount. Eg. when an amount of 10 is divided into 2/3(6.666...)
# and 1/3(1.333..) and we sum these values again, we get the value as 9.999...
# There is a loss of 0.01 (if we use the scale as '2') and hence the booking amount keeps track of
# such amount.
# Set the following property to 'true' if the loss has to be captured.
enableLOPAdjustment = true
# max tolerance allowed where this amount will be adjusted in a book keeping account.
LOP.maxTolerance = 0.01
LOP.bookkeepingAccountId = CASH_ADJUSTMENT
LOP.bookkeepingAccountTypeId = BOOKKEEPING

logging.config=/opt/seamless/conf/contract-management-system/log4j2.xml

gateway.fetchInformation=false
gateway.APIURL=http://svc-access-management:8374/access/v1/gateways
gateway.transactionFieldKey=gatewayCode

##########################################################################
# Locale properties
##########################################################################
locale.language=en
locale.userLangPreferenceEnabled=false
locale.languageHeaderName=language

messagesSource.filesPath=/opt/seamless/conf/contract-management-system/

product_rule.validate.productSkus=false

#field_key.channel=channel
#field_key.district=district
#field_value.delimiter=\\|

#file.name=product-rule.csv
#file.content_type=text/csv
#file.title.delimiter=,
#file.content.delimiter=|
## Possible values Rule_Name, Channel, Product_SKU, District, Valid_From and Valid_Until
#file.headers=Rule_Name,Channel,Product_SKU,District,Valid_From,Valid_Until
#file.insert.batch_size=10

################## Status of cloned contracts ############################
# Currently, the default status of cloned contracts is INACTIVE
# regardless of the status of the parent contract from which they were cloned
# When this config is TRUE, cloned contracts inherit their parent's status,
# otherwise, the old behavior persists
cloned_contracts_inherit_parents_status=true

product.evaluate.staticPrice=false

spring.mvc.pathmatch.matching-strategy=ant_path_matcher

####################################
# Contract api query parameters value
# The param values are comma separated e.g account_type=Receiver,Sender
####################################
contract.api.fetch.account_type=Receiver
contract.api.fetch.tag_name=RECEIVER_DISCOUNT
contract.api.fetch.tag_name=RECEIVER_DISCOUNT

#####################GRAMEENPHONE RELATED CONFIG: GBP-1641 #####################
contract.bulk.update.commission.products=RC,RCEB,PPB,SKITTO,PROMORC,PROMORCEB,PROMOPPB
contract.bulk.update.bonus.products=PROMORC,PROMORCEB,PROMOPPB
################################################################################