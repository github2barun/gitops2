input {
  file {
  ######### Uncomment this pipeline address if we use FileBeat and not Logstash directly.
    #pipeline { address => kycApprovePipeline }

    ######### comment out below section if we don't use logstash directly but through Filebeat.
    start_position => "beginning"
    path => "/var/seamless/log/kyc/data-dump/kyc-data.*"
    sincedb_path => "/var/seamless/log/kyc/sincedb_approve_kyc.log"
  }
}
filter{
    json {
        skip_on_invalid_json => true
        source => "message"
    }
    mutate {
      convert => { "rootComponent" => "boolean" }
    }
    mutate {
        add_field => {
          "[@metadata][eventName]" => "%{eventName}"
          "kyc.region" => "N/A"
        }
    }
    if ( [eventName] in  ["APPROVE_KYC","REJECT_KYC"] )  {
          elasticsearch {
             hosts => [ "localhost:9200" ]
            query => "_id:%{originalErsReference}"
            index => "kyc_data"
            fields => { "timestamp" => "addKycTimestamp" }
          }
          if [addKycTimestamp] {
              date {
                match => ["[addKycTimestamp]", "ISO8601"]
                target => "[addKycTimestamp]"
              } 
              prune{
                 whitelist_names => ["kyc.status","originalErsReference","addKycTimestamp"]
              }              
          }
          else {
            date {
              match => ["kyc.salesTransactionTime","yyyy-MM-dd HH:mm:ss"]
              target => "addKycTimestamp"
            }
            prune{
                 whitelist_names => ["kyc.status","originalErsReference","addKycTimestamp"]
              } 
          }   
    }
   else {
      drop {}
    }
  ruby {
 code => "
        require 'date'
      week_n = event.get('addKycTimestamp').time.strftime '%V'
      month_n = event.get('addKycTimestamp').time.strftime '%m'
      year_n = event.get('addKycTimestamp').time.strftime '%Y'
      if(week_n == '01' && month_n == '12')
        year_n = (year_n.to_i + 1)
        week_num = year_n.to_s + 'w' + week_n.to_s
      else if (month_n == '01' && week_n.to_i > 50)
        year_n = (year_n.to_i - 1)
        week_num = year_n.to_s + 'w' + week_n.to_s
      else
        week_num = year_n.to_s + 'w' + week_n.to_s
      end
     end
      event.set('[@metadata][week_num]', week_num)
          "
   }
}
output {
     if ( [@metadata][eventName] in  ["APPROVE_KYC","REJECT_KYC"] )  {
            elasticsearch {
                action => "update"
                hosts => [ "localhost:9200" ]
                index => "kyc_data_%{[@metadata][week_num]}"
                document_id => "%{originalErsReference}"
                doc_as_upsert => true
            }
          }
  stdout {codec => rubydebug}
}
