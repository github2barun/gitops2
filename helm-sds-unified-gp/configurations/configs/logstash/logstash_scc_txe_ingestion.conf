#Logstash configuration
input {
  ######### Uncomment this pipeline address if we use FileBeat and not Logstash directly.
  #pipeline { address => scc_txe_ingestion_pipeline }

  ######### comment out below section if we don't use logstash directly but through Filebeat.
  file {
      start_position => "beginning"
      path =>  ["/var/seamless/log/txe/txe-data.dump*"]
      sincedb_path => "/var/seamless/log/sincedb_scc_txe_ingestion.log"
  }
  #######################################################################
}

#Filter out the logs before inserting to data lake
filter  {
    # Remove whitespaces from beginning and end, to clear empty lines later

    json {
        source => "message"
    }

    mutate {
        strip => "message"
    }

    # drop empty lines
    if ( [message] == "" ) {
        drop {}
    }

    # drop un-successful transactions
    if ([resultCode] != "0") {
        drop{}
    }

    date {
        match => ["timestamp","yyyy-MM-dd HH:mm:ss"]
        timezone => "UTC"
        target => "timestamp"
    }
}

output {
        stdout {codec => json_lines }
        http {
                http_method => "post"
                url => "http://localhost:9598/scc-live-data-ingestor/data/v1/ingestData"
                format => "message"
                message => "%{message}"
                automatic_retries => 5
                connect_timeout => 30 # default 10 seconds
                socket_timeout => 100 # default 10 seconds
                request_timeout => 120 # default 60 seconds
                # Authorization param: user:pass base64 encoded
                # Retryable param: to enable the retry mechanism inside of HttpRetry aggregator, for this pipeline, for error code 500
                headers => {
                    "Authorization" => "Basic dXNlcjpwYXNz"
                    "org_id" => "seamless"
                    "Retryable" => "true"
                    "source_event_type" => "scc_txe"
                }
                # retry_failed param: to enable the retry mechanism inside of LogStash Http output plugin
                retry_failed => true
                retry_non_idempotent => true  # retry POST
                retryable_codes => [ 401, 429, 502, 503, 504 ] # 401 (not authorized) added in case Authorization is incorrect
        }
}

