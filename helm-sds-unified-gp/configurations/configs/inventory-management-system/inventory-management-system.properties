######## Spring Application configurations ############
spring.application.name=ims
server.port=10103
server.servlet.context-path=/${spring.application.name}
logging.level.com.seamless.ims.http.client=DEBUG
#spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
#spring.jackson.time-zone=Asia/Calcutta

logging.config=file:/opt/seamless/conf/inventory-management-system/log4j2.properties

############# Datafeed  configurations #################
dataFeed.version=1
dataFeed.componentName=ims

threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS

dataFeed.freemarker.file.path=/opt/seamless/conf/inventory-management-system/templates/tdr

template.TRANSFER_INVENTORY=transfer_inventory.ftl
template.ADD_INVENTORY=add_inventory.ftl
template.BULK_ADD_INVENTORY=add_inventory.ftl
template.ADD_RECEIVED_INVENTORY=add_inventory.ftl
template.SUBSCRIBER_SALE=subscriber_sale.ftl
template.BULK_UPDATE_TDR=bulk_update_tdr.ftl
template.BULK_ADD_TDR=bulk_add_tdr.ftl
template.UPDATE_INVENTORY =update_inventory.ftl
template.UPDATE_INVENTORIES=update_inventories.ftl
template.RESERVE_INVENTORY=reserve_inventory.ftl
template.RELEASE_INVENTORY=release_inventory.ftl
template.DEPOSIT_INVENTORY=deposit_inventory.ftl
template.INTRANSIT_INVENTORY=intransit_inventory.ftl
template.DELIVER_INVENTORY=deliver_inventory.ftl
template.BULK_UPDATE_BY_SIM_ACTIVATION_FILE_UPLOAD=bulk_update_by_sim_activation_file_upload.ftl

#-------------------------------------------------------------------------------------
# Audit feed config
#-------------------------------------------------------------------------------------
auditFeed.version=1
auditFeed.componentName=ims
auditFeed.eventType=audit
audit.feed.list.type=EXCLUDE
audit.feed.list.events=
auditFeed.freemarker.file.path=/opt/seamless/conf/inventory-management-system/templates/audit
auditFeed.default.template=inventory_audit_feed.ftl

############# MariaDB  configurations #################
spring.datasource.url=jdbc:mariadb://svc-haproxy:4306/inventory_management_system
spring.datasource.username=refill
spring.datasource.password=refill
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.hibernate.ddl-auto=validate

spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=30
spring.datasource.max-active=500
spring.datasource.max-idle=15
spring.datasource.min-idle=15
spring.datasource.dbcp2.test-while-idle=true

spring.jpa.config.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.config.hibernate.format_sql=true
spring.jpa.config.hibernate.ejb.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy
spring.jpa.config.hibernate.show_sql=true
spring.jpa.config.hibernate.hbm2ddl.auto=validate
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.id.new_generator_mappings=false

spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.idleTimeout=120000
spring.datasource.hikari.connectionTimeout=300000
spring.datasource.hikari.leakDetectionThreshold=300000

############# DB Migration ####################
spring.flyway.enabled=false
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.locations=filesystem:/opt/seamless/etc/dist/inventory-management-system/database/inventorymanagementsystem/upgrades
spring.flyway.sql-migration-prefix=1.0_

############ Sort Related #################
ims.data.fetch.perPage=30
ims.data.fetch.page=1
ims.data.fetch.orderAs=ASC
ims.data.workflow.fetch.orderBy=name
ims.data.tax.fetch.orderBy=taxType
ims.data.owner.fetch-inventory-count.orderBy=quantity
serialized.inventory.condition.types =New,Refurbished,Used
reseller.types=CNA
reseller.ids=Region1

inventory.types.serialized=serialized
inventory.types.nonserialized=nonserialized
inventory.types.trackable_nonserialized=trackable_nonserialized

############ Sort Related #################
ims.data.sort.direction=asc,desc
ims.data.workflow.fetch.orderBy.list=workflowId,name,lastUpdatedStamp,createdStamp
ims.data.tax.fetch.orderBy.list=taxId,taxType,createdStamp,lastUpdatedStamp
ims.data.owner.fetch-inventory-count.orderBy.list=productId,name,type,quantity
serialized.inventory.condition.types =New,Refurbished,Used
reseller.types=CNA
reseller.ids=Region1

ims.service.pagination.default.perPage=30
ims.service.pagination.default.page=1

products.fetch.filter.map={ 'productId' : 'productId', 'name' : 'name', 'type' : 'productType', 'productIdentifier': 'productIdentifier'}
products.fetch.sort.map={ 'productId' : 'productId', 'name' : 'name', 'type' : 'productType', 'productIdentifier': 'productIdentifier'}

jobs.fetch.filter.map={ 'jobName' : 'jobName', 'ownerId' : 'ownerId', 'ownerName' : 'ownerName', 'ownerType' : 'ownerType', 'fileName' : 'fileName', 'startTime' : 'startTime', 'endTime' : 'endTime', 'status' : 'status', 'created' : 'createdStamp', 'lastUpdated' : 'lastUpdatedStamp'}
jobs.fetch.sort.map={ 'jobName' : 'jobName', 'fileName' : 'fileName', 'startTime' : 'startTime', 'endTime' : 'endTime', 'status' : 'status', 'created' : 'createdStamp', 'lastUpdated' : 'lastUpdatedStamp'}

transfers.fetch.sort.map={'createdOn' : 'timestamp',\
  'productName' : 'productName',\
  'productSKU' : 'productSKU',\
  'batchId' : 'batchId',\
  'senderName' : 'senderName',\
  'senderType' : 'senderType',\
  'receiverName' : 'receiverName',\
  'receiverType' : 'receiverType',\
  'startSerial' : 'startSerial',\
  'endSerial' : 'endSerial',\
  'externalReferenceNumber' : 'refNo',\
  'transferReferenceNumber' : 'operationReferenceNumber'}

transfers.fetch.filter.map={'operationType' : 'event',\
  'createdOn' : 'timestamp',\
  'productId' : 'productId',\
  'productName' : 'productName',\
  'productSKU' : 'productSKU',\
  'batchId' : 'batchId',\
  'initiatorId' : 'initiatorId',\
  'initiatorName' : 'initiatorName',\
  'initiatorType' : 'initiatorType',\
  'initiatorLocationId' : 'initiatorLocationId',\
  'senderId' : 'senderId',\
  'senderName' : 'senderName',\
  'senderType' : 'senderType',\
  'senderLocationId' : 'senderLocationId',\
  'receiverId' : 'receiverId',\
  'receiverName' : 'receiverName',\
  'receiverType' : 'receiverType',\
  'receiverLocationId' : 'receiverLocationId',\
  'startSerial' : 'startSerial',\
  'endSerial' : 'endSerial',\
  'quantity' : 'quantity',\
  'externalReferenceNumber' : 'refNo',\
  'transferReferenceNumber' : 'operationReferenceNumber',\
  'serialNumber' : 'serialNos'}

transfer.fetch.default.sort=createdOn
transfer.fetch.sort.direction=desc

inventory.fetch.filter.map={ 'inventoryId' : 'id', 'stateId' : 'workflowStateId', 'serialNumber' : 'serialNumber', 'batchId' : 'batchId', 'refNo' : 'refNo', 'ownerId' : 'ownerId', 'ownerName' : 'ownerName', 'ownerType' : 'ownerType', 'locationId' : 'locationId', 'lastUpdated' : 'lastUpdatedStamp' , 'productSKU' : 'productSKU'}
inventory.fetch.sort.map={ 'inventoryId' : 'id', 'stateId' : 'workflowStateId', 'serialNumber' : 'serialNumber', 'batchId' : 'batchId', 'refNo' : 'refNo', 'ownerId' : 'owner.ownerId', 'ownerName' : 'owner.name', 'ownerType' : 'owner.type', 'locationId' : 'locationId', 'lastUpdated' : 'lastUpdatedStamp'}
#Filter and sort for trackable inventory
inventory.fetch.trackable.filter.map={ 'inventoryId' : 'id', 'stateId' : 'workflowStateId','startNo':'startNo', 'endNo':'endNo', 'batchId' : 'batchId', 'refNo' : 'refNo', 'ownerId' : 'ownerId', 'ownerName' : 'ownerName', 'ownerType' : 'ownerType', 'locationId' : 'locationId', 'lastUpdated' : 'lastUpdatedStamp' , 'productSKU' : 'productSKU'}
inventory.fetch.trackable.sort.map={ 'inventoryId' : 'id','startNo':'startNo', 'endNo':'endNo', 'stateId' : 'workflowStateId', 'batchId' : 'batchId', 'refNo' : 'refNo', 'ownerId' : 'owner.ownerId', 'ownerName' : 'owner.name', 'ownerType' : 'owner.type', 'locationId' : 'locationId', 'lastUpdated' : 'lastUpdatedStamp'}
#Filter and sort for inventory box
inventory.fetch.box.filter.map={ 'serial' : 'serialNumber', 'state' : 'workflowStateId', 'refNo' : 'refNo', 'boxId' : 'batchId', 'productSku' : 'productSKU', 'createdAt' : 'createdStamp', 'updatedAt' : 'lastUpdatedStamp'}
inventory.fetch.box.sort.map={ 'serial' : 'serialNumber', 'state' : 'workflowStateId', 'refNo' : 'refNo', 'boxId' : 'batchId', 'productSku' : 'productSKU', 'createdAt' : 'createdStamp', 'updatedAt' : 'lastUpdatedStamp'}
inventory.fetch.box.sort.default=serial_asc

############ Feign Client Properties ################
resource.manager.feign.client=http://svc-object-store:3000/osm/v1
deal.manager.feign.client=http://svc-dealer-management:8033/
deal.manager.get.child.resellers.url=/dms/v1/resellers/resellerChildren/{parentResellerId}
deal.manager.get.reseller.url=/dms/v1/resellers/{resellerId}/resellerData
deal.manager.get.reseller_by_attribute.url=/dms/auth/searchResellersByAttribute?limit={limit}&offSet={offSet}
deal.manager.get.bulk.reseller.info.url=/dms/auth/getBulkResellerInfo
ims.bulk.uploader.feign.client=http://localhost:10104/ims-bulk-uploader

# If this config is true, owner will be looked up from dealer management or from user management configured in system
user.management.proxy.enable=true
user.management.proxy.classname=DealerManagementProxy
user.management.proxy.url=http://localhost:9999

product.management.proxy=PMS
bi.proxy.url=http://svc-bi-engine:8917/
################# Kafka Streams configurations #################
spring.kafka.producer.bootstrap-servers=svc-kafka:9092
spring.kafka.security.protocol.enable=false
spring.kafka.security.protocol=SASL_SSL
spring.kafka.sasl.mechanism=SCRAM-SHA-512
spring.kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username=\"sfcpockafka\" password=\"SDS1@sfcpockafka\";


ims-out-stream.topic.name=inventory-resource-dev
ims-out-stream.activation.topic.name=inventory-activation-dev
ims-out-stream.partitionCount=12
ims-out-stream.replicaCount=1

############# Ribbon-Eureka configuration ####################
spring.cloud.loadbalancer.ribbon.enable=true
ribbon.eureka.enabled=false
auth-server.ribbon.eureka.enabled=false
auth-server.ribbon.NIWSServerListClassName=com.netflix.loadbalancer.ConfigurationBasedServerList
auth-server.ribbon.listOfServers=localhost:9999
auth-server.ribbon.ServerListRefreshInterval=1000

############## comma seperated list for transfer allowable state #############
inventory.transfer.allowable.state=RESERVED
inventory.transfer.change.state=true
inventory.transfer.to.state=AVAILABLE

subscriber.inventory.operation.code.transfer=TRANSFER_INVENTORY
subscriber.inventory.workflow.state.transfer=Sold
inventory.workflow.state.reserved=Reserved
inventory.operation.code.reserved=RESERVE_INVENTORY
inventory.workflow.state.released=Available
inventory.operation.code.released=RELEASE_INVENTORY
inventory.workflow.state.transfer=Available
inventory.operation.code.transfer=TRANSFER_INVENTORY
inventory.workflow.state.intransit=In Transit
inventory.operation.code.intransit=INTRANSIT_INVENTORY
inventory.workflow.state.delivered=Available
inventory.operation.code.delivered=DELIVER_INVENTORY
inventory.workflow.state.deposited=Deposited
inventory.operation.code.deposited=DEPOSIT_INVENTORY
inventory.workflow.state.available=Available
inventory.operation.code.reverse=REVERSE_INVENTORY
inventory.operation.code.bulkUpdateBySimActivationFileUpload=BULK_UPDATE_BY_SIM_ACTIVATION_FILE_UPLOAD
############ IMS-Service Related #################
## Product unit price can be zero or not
product.unit.price.can.zero=false

spring.jackson.default-property-inclusion=NON_NULL
sfo.disable.user.authorization=true
sfo.super-user.username=root

ims.fetch.random.pattern.notfound=true

ims.scheduler.reserve.blocking.period.sec=300
ims.scheduler.release.internal.reserve.inventory=0/15 * * * * *
ims.scheduler.release.row.limit=10

ims.scheduler.lock.at.most.for=14m
ims.scheduler.lock.at.least.for=14m

ims.boxId.prefix=B000

#Check if schedular enabled from config.#
ims.scheduler.deletedItems.enabled=true
#left to right params are Seconds,Minutes,Hours,Day-of-Month,Month,Day-of-Week,Year (optional field)#
ims.scheduler.deletedItems.execution_cron=0 0/15 * * * *
ims.scheduler.deletedItems.retentionInMins=30



############ Multipart File Properties ###############
spring.servlet.multipart.enabled=true
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=15MB

############# CORS config ####################
cors.enable=false
#comma separated origin list or star(*) to allow all
cors.allowedorigins=*
http.response.headers=system-token,authorization

############# Spring cloud properties #################
spring.cloud.config.name=ims
spring.cloud.config.uri=http://localhost:8888

product.management.proxy.url=http://svc-product-management:8012

################ Product related #############
ims.sim.sold.work_flow_state=Sold
ims.productSKU.sim_dsa=SIM_DSA
ims.productSKU.sim_non_dsa=SIM_NON_DSA

inventory.allowed.reseller.types=
inventory.allowed.reseller.ids=

feign.client.config.default.connectTimeout=160000000
feign.client.config.default.readTimeout=160000000

system.token.isTokenEncrypt=false

voucher.management.feign.client=http://localhost:9083/
voucher.management.update.voucher.url=/vms/v1/voucher/{voucherSerial}
voucher.management.update.voucher.attributes.url=/vms/v1/voucher/attributes
ic.feign.client=http://localhost:8090/
ic.block.vouchers.url=/sfc-link/block-inventory
inventory.notification.filter.products=
inventory.notification.filter.operations=INVALIDATE_INVENTORY
inventory.notification.filter.states=Unavailable
inventory.notification.filter.channels=IC

inventory.notification.state.mapping.available=1
inventory.notification.state.mapping.reserved=2
inventory.notification.state.mapping.active=3
inventory.notification.state.mapping.blocked=4
inventory.notification.state.mapping.expired=5
inventory.notification.state.mapping.redeem_pending=6
inventory.notification.state.mapping.partially_redeemed=7
inventory.notification.state.mapping.redeemed=8
inventory.notification.state.mapping.cancelled=9
inventory.notification.state.mapping.print=10
inventory.notification.state.mapping.unavailable=11

# To configure the child resellerTypes for inventory counting
ims.count.reseller.types=Distributor,Operator,Agent,RWM,Mentor
# To configure state flow id to identify available stock
available.workflow.state.ids=1
# To configure lookup depth for child resellers
ims.inventory.count.default.level=10

inventory.boxes.export.headers.entity.mapping=boxId,parentBoxId,type,startSerial,endSerial,importId,importDate,quantity,ownerId,locationId
inventory.boxes.export.headers=Box Id,Parent Box Id,Type,StartSerial,EndSerial,ImportId,ImportDate,Quantity,Owner,Location
inventory.boxes.export.filter.fields=Box ID:batch_id,Parent Box ID:parentBoxId,Quantity:quantity,Start Serial:startSerial,End Serial:endSerial,Import Id:resource_id,Import Date:importDate,Order Id:ref_no,Owner:owner_id,Location:location_id
inventory.boxes.export.filter.operations=startWith,endWith,equals,contains
inventory.boxes.export.order.by.fields=Box ID:batchId,Quantity:quantity,Start Serial:startSerial,End Serial:endSerial,Parent Box ID:parentBoxId,Import Id:importId,Import Date:importDate,Order Id:orderId,Owner:ownerId,Location:locationId

inventory.box.export.headers.entity.mapping=serial,state,productSku,locationId,employeeId,createdAt,updatedAt
inventory.box.export.headers=Serial,State,Product SKU,Location Id,Employee Id,Created At,Updated At
inventory.box.export.filter.fields=Serial:serial_number,stateName:workflow_state_id,Product SKU:product_sku,Created At:created_stamp,Updated At:updated_stamp
inventory.box.export.filter.operations=startWith,endWith,equals,contains,IN
inventory.box.export.order.by.fields=Serial:serial_number,State:workflow_state_id,Product SKU:product_sku,Created At:created_stamp,Updated At:updated_stamp
inventory.fetch.logged.in.user.order.by.fields=serialNo:serial_number,state:workflow_state_id,productSKU:product_sku,locationId:location_id,ownerId:owner_id,employeeId:employee_id,quantity:quantity,startNo:start_no,endNo:end_no,batchId:batch_id,productType:product_type
inventory.fetch.logged.in.user.filter.fields=serialNo:serial_number,state:workflow_state_id,productSKU:product_sku,locationId:location_id,ownerId:owner_id,employeeId:employee_id,quantity:quantity,startNo:start_no,endNo:end_no,batchId:batch_id,productType:product_type
inventory.fetch.box.for.product.order.by.fields=boxId:batch_id,parentBoxId:box_history,quantity:quantity,startSerial:startSerial,endSerial:endSerial,importId:resource_id,importDate:importDate,orderId:ref_no,ownerId:owner_id,Location:location_id
inventory.fetch.box.for.product.filter.fields=boxId:batch_id,parentBoxId:box_history,quantity:quantity,startSerial:startSerial,endSerial:endSerial,importId:resource_id,importDate:importDate,orderId:ref_no,locationId:location_id,State:workflow_state_id,ownerId:owner_id,Employee:employee_id

inventory.fetch.box.child.level=0
inventory.fetch.box.default.orderBy=importDate
inventory.fetch.box.default.order=desc
inventory.loggedin.user.headers.display.values=Id,Product SKU,Location Id,Owner Id,Work Flow State Id,Is Active,Data,Batch Id,Ref No,Update Reason,Employee Id,Inventory Id Type,Serial Text,Table Tag,Inventory Condition,Box History,Owner History,Resource Id,Quantity,UOM,Start No,End No,Product Type
inventory.loggedin.user.headers.values=id,productSKU,locationId,ownerId,workflowStateId,isActive,data,batchId,refNo,updateReason,employeeId,inventoryIdType,serialText,inventoryCondition,boxHistory,ownerHistory,resourceId,quantity,UOM,startNo,endNo,productType

messages.source.files.path=/opt/seamless/conf/inventory-management-system
ims.language.support=en-US,en-GB,fr
inventory.default.state.name=Available
inventory.employee.is.external.allowed=true

#Import inventory result codes
inventory.import.result.codes={ 'FAIL_ON_ERROR' : '1', 'SKIP_ON_ERROR' : '2', 'FULL_IMPORT' : '3', 'SUCCESS' : '0'}
inventory.import.default.active_flag=1

# Temporary configurations for viewing stock
root.level.user.id=OPERATOR
# Reseller type for help desk users
# Supply a comma separated list of reseller types e.g. Agent,Distributor,HelpDesk
reseller.for.viewing.stock=OFF

inventory.id.type.default.value=SERIAL

#markAsDeposited.business.rules=
#markAsDelivered.business.rules=
#markInTransit.business.rules=SWITCH_PRODUCT_RULE

# Mapping to validate and map an inventory's product sku on a different one
# Value is given in json format { fromSKU:'toSKU',fromSKU1:'toSKU2' } mappings
#rule.SWITCH_PRODUCT_RULE.mappings.fromSKU_toSKU={fromSKU:'toSKU'}
# Possible values are: SenderTypeToReceiverType, SenderTypeToReceiverId, SenderIdToReceiverType, SenderIdToReceiverId
#rule.SWITCH_PRODUCT_RULE.match_partner_type=SenderTypeToReceiverType
#rule.SWITCH_PRODUCT_RULE.sender=Direct_sales
#rule.SWITCH_PRODUCT_RULE.receiver=Region
#rule.SWITCH_PRODUCT_RULE.start_serial_attribute_name=start_serial
#rule.SWITCH_PRODUCT_RULE.end_serial_attribute_name=end_serial

api.default.limit=10
api.default.offset=1

transfer.subscribers=SUBSCRIBERID,SUBSCRIBERMSISDN
transfer.resellers=RESELLERID

reserve.buyer.id.type=SUBSCRIBERID
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

# Supported secondary serial idTypes (uncomment to enable the feature)
#ims.secondary_serials.idTypes=IMEI,MAC

inventory.owner.idType.default=RESELLERID
bi-lake.search.item.past.year=1
enable.bi-lake.to.search.sold.trackable.inventory.before.reserving=false
enable.bi-lake.to.fetch.sold.serialised.inventory=false
bulkImportHandler=generic
bulkUpdateHandler:bulkUpdateHandlerSpecific

inventory.owner.idType.default=RESELLERID

inventory.types.nonserialized.insert.handling.strategy=ADJUST_ENTITY
# The following config enables profiling using JetM Library
profiling.enabled=false
# any of the following values separated by comma (api, service, repository, client)
profiling.targets=api,service

# one of the following values (full, headers, basic, none)
feign.logging.level=full
available.workflow.state.names=Available

#Caffine cache expiration time in minutes
caffeine.cache.expire.after.minutes=30

missing.inventory.updateReason=MISSING_OR_STOLEN

# Required by current version of swagger to run
# Currently IMS seems using methods of version 2 and 3 both
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Config related to box-hierarchy handling and serial length validation
inventory.import.process-box-hierarchy=true
inventory.import.validate.serial.length=true
inventory.import.serial.length=19
inventory.import.skip.serial-prefix=true
inventory.import.serial-prefix.length=9
inventory.import.skip.checksum-digits=true
inventory.import.checksum-digits.length=1

# When this config is true, a batch id given while reserving inventory will be
# processed to check if it is a terminal or leaf batch id before the inventory
# associated with it is reserved. If it is not, the terminal or leaf batch ids
# are fetched and then the reserve operation is continued as usual
inventory.process-box-hierarchy=true

# BoxType for system-box
inventory.system.box-type=system_box

# set available workflow-state as 1
inventory.workflow-state.available.id=1

# IDs of inventory states for which we want to note when inventory leaves them to another state (MTN SA specific)
# These states are dma'd, ping, and active, defined in the pms.state table
# 8 corresponds to ping
# 9 corresponds to dma'd
# 3 corresponds to active
inventory.workflow.states.requiring.deficit.tracking=8,9,3

# When this config is set to true, the inventory that are fetched during basic box info searches are restricted to
# those that belong to the reseller who made the request. If it is set to false, no such restriction is applied
inventory.fetch.basic.box-info-for-loggedin-user-only=true

##########################################################################
# Locale properties
##########################################################################
locale.language=en
locale.languageHeaderName=accept-language
locale.userLangPreferenceEnabled=false