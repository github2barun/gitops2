# This map directive will set the rootComponent variable based on reqex match(~).
#The rootComponent variable is set as header to the IMDS authentication API.
map $request_uri $rootComponent {
        ~/thirdParty/oms/* "oms";
        ~/api/ims/* "ims";
        ~/api/kyc/* "kyc";
        ~/api/access/* "access";
        ~/api/dms/* "dms";
        ~/api/pms/* "pms";
        ~/api/template/* "template";
        ~/api/oms/* "oms";
        ~/api/acms/* "acms";
        ~/api/imsbridge/* "imsbridge";
        ~/api/ams/* "ams";
        ~/api/vms/* "vms";
        ~/api/bi-engine/* "bi-engine";
        ~/api/osm/* "osm";
        ~/api/txe/* "txe";
	    ~/api/rms/* "resource-manager";
	    ~/api/crm/* "crm";
        ~/api/iprs/* "iprs";
       	~/api/groupmanagementsystem/* "groupmanagementsystem";
        ~/api/is/secure/* "is";
	    ~/api/tms/* "tms";
	    ~/api/aas/* "aas";
        ~/api/bss/* "bss";
        ~/api/billing/* "billing";
        ~/api/surveymanagement/* "surveymanagement";
        ~/api/els/* "els";
        ~/api/alertapp/* "alertapp";
        ~/api/rgms/* "rgms";
        ~/api/sfc/* "sfc";
        ~/api/nms/* "nms";
        ~/api/scc/* "scc";
        ~/api/scc-commission-engine/* "scc-commission-engine";
        ~/api/scc-payout-engine/* "scc-payout-engine";
        ~/api/notificationmanager/* "notificationmanager";
	 default "";
}
map $msec $msec_no_decimal { ~(.*)\.(.*) $1; }
server {
    listen 80;
    server_name localhost;

    underscores_in_headers on;

    #charset koi8-r;

    #path to html folder
    root /usr/share/nginx/html;

   #Dont cache config
   location ~ .*conf/.*js$ {
    	expires -1;
   	add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
   }

    #error_page 401 400  /401.json;
    location /401.json {
        #root /usr/share/nginx/json;
	add_header 'Access-Control-Expose-Headers' 'authorization' always;
	add_header 'Access-Control-Allow-Origin' * always;
	add_header 'Access-Control-Allow-Headers' * always;
    }

    #error_page 500 502 503 504 /50x.json;
    location /50x.json {
        #root /usr/share/nginx/json;
        add_header 'Access-Control-Expose-Headers' 'authorization' always;
       	add_header 'Access-Control-Allow-Origin' * always;
        add_header 'Access-Control-Allow-Headers' * always;
    	add_header authorization $authToken always;
    }

    location  / {
       try_files $uri $uri/ /index.html;
       add_header X-Frame-Options "SAMEORIGIN" always;
    }

    #IDMS API to verify the authorization token
    location = /auth {
        internal;
        set $new_request_uri $request_uri;
        if ($request_uri ~ ^/api/(.+)$) {
            set $new_request_uri $1;
        }
        proxy_pass http://localhost:8219/auth/v2/verifyToken;
        proxy_method POST;
        proxy_pass_request_body off; # no need to send the POST body
        proxy_set_header Content-Length "";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-URI $new_request_uri;
        proxy_set_header X-Original-METHOD $request_method;
        proxy_set_header rootComponent $rootComponent;
        proxy_set_header * $upstream_http_*;
        auth_request_set $auth_resp_jwt $upstream_http_x_vouch_jwt;
        auth_request_set $auth_resp_err $upstream_http_x_vouch_err;
        auth_request_set $auth_resp_failcount $upstream_http_x_vouch_failcount;
        proxy_set_header date $msec_no_decimal;

    }

    #IDMS API for login with Password/OTP/Password+OTP
    location = /login-backend {
        if ($request_method = OPTIONS) {
            return 204;
        }
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Max-Age 3600;
        add_header Access-Control-Allow-Headers * always;
        add_header 'Access-Control-Expose-Headers' 'authorization';
        add_header 'Access-Control-Expose-Headers' 'password-expired';
        proxy_pass http://localhost:8219/auth/v2/login;
	    add_header Access-Control-Allow-Credentials 'true' always;
        proxy_set_header date $msec_no_decimal;
        proxy_hide_header "user";
    }

   #IDMS API for generateOTP
    location = /generateOTP {
        if ($request_method = OPTIONS) {
            return 204;
        }
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Max-Age 3600;
        add_header Access-Control-Allow-Headers * always;
        add_header 'Access-Control-Expose-Headers' 'authorization';
        proxy_pass http://localhost:8219/auth/v2/generateOTP;
    	proxy_method POST;
        add_header Access-Control-Allow-Credentials 'true' always;
        proxy_set_header date $msec_no_decimal;
        proxy_hide_header "user";
    }

   #IDMS API for forgetPassword
    location = /forgetPassword {
        if ($request_method = OPTIONS) {
            return 204;
        }
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Max-Age 3600;
        add_header Access-Control-Allow-Headers * always;
        add_header 'Access-Control-Expose-Headers' 'authorization';
        proxy_pass http://localhost:8219/auth/v2/forgetPassword;
        proxy_method POST;
        add_header Access-Control-Allow-Credentials 'true' always;
        proxy_set_header date $msec_no_decimal;
        proxy_hide_header "user";
    }

#IDMS API for Mobile App login
    location = /auth/api/rest/v1.0.0/loginService/processResellerLoginRequest {
        if ($request_method = OPTIONS) {
            return 204;
        }
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Max-Age 3600;
        add_header Access-Control-Allow-Headers * always;
        add_header 'Access-Control-Expose-Headers' 'authorization';
        proxy_pass http://localhost:8219/auth/v2/login;
        add_header Access-Control-Allow-Credentials 'true' always;
        proxy_set_header date $msec_no_decimal;
        proxy_hide_header "user";
    }

    #handle OSM static files
    #
    location /api/osm {
        include /etc/nginx/conf.d/services/osm_api.conf;
     }
    location /api/location-service {
        include /etc/nginx/conf.d/services/location_api.conf;
      }
    # /api is mapping for all the service API. To expose a new endpoint, create a new file under service folder and add proxy_pass url
    location /api {
            include /etc/nginx/conf.d/services/*.conf;
            auth_request  /auth;
            add_header Access-Control-Max-Age 3600;
            add_header Access-Control-Allow-Headers *;
            add_header 'Access-Control-Expose-Headers' 'authorization';
            auth_request_set $systemToken $upstream_http_system_token;
            proxy_set_header system-token $systemToken;
            auth_request_set $authToken $upstream_http_authorization;
            proxy_set_header authorization $authToken;
            proxy_hide_header "system-token";
	        add_header authorization $authToken always;
    }

    location = /logout {
        proxy_set_header date $msec_no_decimal;
        include conf.d/support/cors.conf;
        add_header Access-Control-Max-Age 3600;
        proxy_pass http://localhost:8219/auth/v2/logout;
        proxy_hide_header "user";
    }


    location = /refreshToken {
        proxy_set_header date $msec_no_decimal;
        include conf.d/support/cors.conf;
        add_header Access-Control-Max-Age 3600;
        proxy_pass http://localhost:8219/auth/v2/refreshToken;
        proxy_hide_header "user";
    }

    location = /auth/api/rest/v1.0.0/logOutService/logOutSession {
        proxy_set_header date $msec_no_decimal;
        include conf.d/support/cors.conf;
        add_header Access-Control-Max-Age 3600;
        proxy_pass http://localhost:8219/auth/v2/logout;
        proxy_hide_header "user";
    }

    location /thirdPartyVerifyToken {
                set $new_request_uri $request_uri;
                 if ($request_uri ~ ^/thirdParty/(.+)$) {
                     set $new_request_uri $1;
                  }
            proxy_pass http://localhost:8219/auth/v2/verifyTokenFromKey;
            proxy_method POST;
            proxy_pass_request_body off; # no need to send the POST body
            proxy_set_header Content-Length "";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $new_request_uri;
            proxy_set_header X-Original-METHOD $request_method;
            proxy_set_header rootComponent $rootComponent;
            proxy_set_header * $upstream_http_*;
             proxy_set_header date $msec_no_decimal;
        }
      location /thirdParty {
                include /etc/nginx/conf.d/services/thirdParty/*.conf;
                auth_request  /thirdPartyVerifyToken;
                add_header Access-Control-Max-Age 3600;
                add_header Access-Control-Allow-Headers *;
                add_header 'Access-Control-Expose-Headers' 'authorization';
                auth_request_set $systemToken $upstream_http_system_token;
                proxy_set_header system-token $systemToken;
                auth_request_set $authToken $upstream_http_authorization;
                proxy_set_header authorization $authToken;
                proxy_hide_header "system-token";
                add_header authorization $authToken always;
        }

        location = /auth/v2/verify-user {
        proxy_set_header date $msec_no_decimal;
        include conf.d/support/cors.conf;
        add_header Access-Control-Max-Age 3600;
        proxy_pass http://localhost:8219/auth/v2/verify-user;
        proxy_hide_header "user";
        }

        #secure/api/rest/v1.0.0/seamlessOneService/sendNotification

        # IS API for mobile app Contact Us
            location =/secure/api/rest/v1.0.0/seamlessOneService/sendNotification {
                if ($request_method = OPTIONS) {
                    return 204;
                }
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Max-Age 3600;
                add_header Access-Control-Allow-Headers * always;
                add_header 'Access-Control-Expose-Headers' 'authorization';
                proxy_pass http://localhost:9007/secure/api/rest/v1.0.0/seamlessOneService/sendNotification;
                proxy_method POST;
                add_header Access-Control-Allow-Credentials 'true' always;
                proxy_set_header date $msec_no_decimal;
                proxy_hide_header "user";
            }
      ### Mobile app generate OTP
      location = /auth/api/rest/v1.0.0/otp/generateOTP {
              if ($request_method = OPTIONS) {
                  return 204;
              }
              add_header Access-Control-Allow-Origin * always;
              add_header Access-Control-Max-Age 3600;
              add_header Access-Control-Allow-Headers * always;
              add_header 'Access-Control-Expose-Headers' 'authorization';
              proxy_pass http://localhost:8219/auth/v2/generateOTP;
          	proxy_method POST;
              add_header Access-Control-Allow-Credentials 'true' always;
              proxy_set_header date $msec_no_decimal;
              proxy_hide_header "user";
          }
        ### Mobile App forget password
        location = /auth/v2/forgetPassword {
                if ($request_method = OPTIONS) {
                    return 204;
                }
                add_header Access-Control-Allow-Origin * always;
                add_header Access-Control-Max-Age 3600;
                add_header Access-Control-Allow-Headers * always;
                add_header 'Access-Control-Expose-Headers' 'authorization';
                proxy_pass http://localhost:8219/auth/v2/forgetPassword;
                proxy_method POST;
                add_header Access-Control-Allow-Credentials 'true' always;
                proxy_set_header date $msec_no_decimal;
                proxy_hide_header "user";
            }
}