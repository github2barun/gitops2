
rules.operations.GroupRequestModel.validate=false

rules.operations.GroupRequestModel.validators.id.valueExpression=['group']['id']
rules.operations.GroupRequestModel.validators.id.required=true
rules.operations.GroupRequestModel.validators.id.freemarker=true
rules.operations.GroupRequestModel.validators.id.enable=false
rules.operations.GroupRequestModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.id.validationMessage=state.group.id.message

rules.operations.GroupRequestModel.validators.name.valueExpression=['group']['name']
rules.operations.GroupRequestModel.validators.name.required=true
rules.operations.GroupRequestModel.validators.name.freemarker=true
rules.operations.GroupRequestModel.validators.name.enable=false
rules.operations.GroupRequestModel.validators.name.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.name.validationMessage=state.group.name.message

rules.operations.GroupRequestModel.validators.description.valueExpression=['group']['description']
rules.operations.GroupRequestModel.validators.description.required=true
rules.operations.GroupRequestModel.validators.description.freemarker=true
rules.operations.GroupRequestModel.validators.description.enable=false
rules.operations.GroupRequestModel.validators.description.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.description.validationMessage=state.group.description.message

rules.operations.GroupRequestModel.validators.status.valueExpression=['group']['status']
rules.operations.GroupRequestModel.validators.status.required=true
rules.operations.GroupRequestModel.validators.status.freemarker=true
rules.operations.GroupRequestModel.validators.status.enable=false
rules.operations.GroupRequestModel.validators.status.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.status.validationMessage=state.group.status.message

rules.operations.GroupRequestModel.validators.createdBy.valueExpression=['group']['createdBy']
rules.operations.GroupRequestModel.validators.createdBy.required=true
rules.operations.GroupRequestModel.validators.createdBy.freemarker=true
rules.operations.GroupRequestModel.validators.createdBy.enable=false
rules.operations.GroupRequestModel.validators.createdBy.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.createdBy.validationMessage=state.group.createdBy.message

rules.operations.GroupRequestModel.validators.createdAt.valueExpression=['group']['createdAt']
rules.operations.GroupRequestModel.validators.createdAt.required=true
rules.operations.GroupRequestModel.validators.createdAt.freemarker=true
rules.operations.GroupRequestModel.validators.createdAt.enable=false
rules.operations.GroupRequestModel.validators.createdAt.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.createdAt.validationMessage=state.group.createdAt.message

rules.operations.GroupRequestModel.validators.updatedAt.valueExpression=['group']['updatedAt']
rules.operations.GroupRequestModel.validators.updatedAt.required=true
rules.operations.GroupRequestModel.validators.updatedAt.freemarker=true
rules.operations.GroupRequestModel.validators.updatedAt.enable=false
rules.operations.GroupRequestModel.validators.updatedAt.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.updatedAt.validationMessage=state.group.updatedAt.message

rules.operations.GroupRequestModel.validators.minimumMembers.valueExpression=['group']['minimumMembers']
rules.operations.GroupRequestModel.validators.minimumMembers.required=true
rules.operations.GroupRequestModel.validators.minimumMembers.freemarker=true
rules.operations.GroupRequestModel.validators.minimumMembers.enable=false
rules.operations.GroupRequestModel.validators.minimumMembers.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.minimumMembers.validationMessage=state.group.minimumMembers.message

rules.operations.GroupRequestModel.validators.maximumMembers.valueExpression=['group']['maximumMembers']
rules.operations.GroupRequestModel.validators.maximumMembers.required=true
rules.operations.GroupRequestModel.validators.maximumMembers.freemarker=true
rules.operations.GroupRequestModel.validators.maximumMembers.enable=false
rules.operations.GroupRequestModel.validators.maximumMembers.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.maximumMembers.validationMessage=state.group.maximumMembers.message

rules.operations.GroupRequestModel.validators.availableFrom.valueExpression=['group']['availableFrom']
rules.operations.GroupRequestModel.validators.availableFrom.required=true
rules.operations.GroupRequestModel.validators.availableFrom.freemarker=true
rules.operations.GroupRequestModel.validators.availableFrom.enable=false
rules.operations.GroupRequestModel.validators.availableFrom.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.availableFrom.validationMessage=state.group.availableFrom.message

rules.operations.GroupRequestModel.validators.availableUntil.valueExpression=['group']['availableUntil']
rules.operations.GroupRequestModel.validators.availableUntil.required=true
rules.operations.GroupRequestModel.validators.availableUntil.freemarker=true
rules.operations.GroupRequestModel.validators.availableUntil.enable=false
rules.operations.GroupRequestModel.validators.availableUntil.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRequestModel.validators.availableUntil.validationMessage=state.group.availableUntil.message

#####################

rules.operations.DataItemModel.validate=false

rules.operations.DataItemModel.validators.dataName.valueExpression=['dataName']
rules.operations.DataItemModel.validators.dataName.required=true
rules.operations.DataItemModel.validators.dataName.freemarker=true
rules.operations.DataItemModel.validators.dataName.enable=false
rules.operations.DataItemModel.validators.dataName.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.DataItemModel.validators.dataName.validationMessage=state.group.DataItemModel.dataName.message

rules.operations.DataItemModel.validators.dataValue.valueExpression=['dataValue']
rules.operations.DataItemModel.validators.dataValue.required=true
rules.operations.DataItemModel.validators.dataValue.freemarker=true
rules.operations.DataItemModel.validators.dataValue.enable=false
rules.operations.DataItemModel.validators.dataValue.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.DataItemModel.validators.dataValue.validationMessage=state.group.DataItemModel.dataValue.message

####################

rules.operations.GroupAdminModel.validate=false

rules.operations.GroupAdminModel.validators.id.valueExpression=['id']
rules.operations.GroupAdminModel.validators.id.required=true
rules.operations.GroupAdminModel.validators.id.freemarker=true
rules.operations.GroupAdminModel.validators.id.enable=false
rules.operations.GroupAdminModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.id.validationMessage=state.GroupAdminModel.id.message

rules.operations.GroupAdminModel.validators.name.valueExpression=['name']
rules.operations.GroupAdminModel.validators.name.required=true
rules.operations.GroupAdminModel.validators.name.freemarker=true
rules.operations.GroupAdminModel.validators.name.enable=false
rules.operations.GroupAdminModel.validators.name.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.name.validationMessage=state.GroupAdminModel.name.message

rules.operations.GroupAdminModel.validators.userId.valueExpression=['userId']
rules.operations.GroupAdminModel.validators.userId.required=true
rules.operations.GroupAdminModel.validators.userId.freemarker=true
rules.operations.GroupAdminModel.validators.userId.enable=false
rules.operations.GroupAdminModel.validators.userId.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.userId.validationMessage=state.GroupAdminModel.userId.message

rules.operations.GroupAdminModel.validators.userIdType.valueExpression=['userIdType']
rules.operations.GroupAdminModel.validators.userIdType.required=true
rules.operations.GroupAdminModel.validators.userIdType.freemarker=true
rules.operations.GroupAdminModel.validators.userIdType.enable=false
rules.operations.GroupAdminModel.validators.userIdType.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.userIdType.validationMessage=state.GroupAdminModel.userIdType.message

rules.operations.GroupAdminModel.validators.memberType.valueExpression=['memberType']
rules.operations.GroupAdminModel.validators.memberType.required=true
rules.operations.GroupAdminModel.validators.memberType.freemarker=true
rules.operations.GroupAdminModel.validators.memberType.enable=false
rules.operations.GroupAdminModel.validators.memberType.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.memberType.validationMessage=state.GroupAdminModel.memberType.message

rules.operations.GroupAdminModel.validators.status.valueExpression=['status']
rules.operations.GroupAdminModel.validators.status.required=true
rules.operations.GroupAdminModel.validators.status.freemarker=true
rules.operations.GroupAdminModel.validators.status.enable=false
rules.operations.GroupAdminModel.validators.status.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.status.validationMessage=state.GroupAdminModel.status.message

rules.operations.GroupAdminModel.validators.effectiveFrom.valueExpression=['effectiveFrom']
rules.operations.GroupAdminModel.validators.effectiveFrom.required=true
rules.operations.GroupAdminModel.validators.effectiveFrom.freemarker=true
rules.operations.GroupAdminModel.validators.effectiveFrom.enable=false
rules.operations.GroupAdminModel.validators.effectiveFrom.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.effectiveFrom.validationMessage=state.GroupAdminModel.effectiveFrom.message

rules.operations.GroupAdminModel.validators.createdAt.valueExpression=['createdAt']
rules.operations.GroupAdminModel.validators.createdAt.required=true
rules.operations.GroupAdminModel.validators.createdAt.freemarker=true
rules.operations.GroupAdminModel.validators.createdAt.enable=false
rules.operations.GroupAdminModel.validators.createdAt.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupAdminModel.validators.createdAt.validationMessage=state.GroupAdminModel.createdAt.message

############################

rules.operations.GroupMemberRequestModel.validate=false

rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.valueExpression=['groupIdToAddAsManager']
rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.required=true
rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.freemarker=true
rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.enable=false
rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberRequestModel.validators.groupIdToAddAsManager.validationMessage=state.groupIdToAddAsManager.message

rules.operations.GroupMemberModel.validate=false

rules.operations.GroupMemberModel.validators.id.valueExpression=['id']
rules.operations.GroupMemberModel.validators.id.required=true
rules.operations.GroupMemberModel.validators.id.freemarker=true
rules.operations.GroupMemberModel.validators.id.enable=false
rules.operations.GroupMemberModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.id.validationMessage=state.GroupMemberModel.id.message

rules.operations.GroupMemberModel.validators.name.valueExpression=['name']
rules.operations.GroupMemberModel.validators.name.required=true
rules.operations.GroupMemberModel.validators.name.freemarker=true
rules.operations.GroupMemberModel.validators.name.enable=false
rules.operations.GroupMemberModel.validators.name.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.name.validationMessage=state.GroupMemberModel.name.message

rules.operations.GroupMemberModel.validators.userId.valueExpression=['userId']
rules.operations.GroupMemberModel.validators.userId.required=true
rules.operations.GroupMemberModel.validators.userId.freemarker=true
rules.operations.GroupMemberModel.validators.userId.enable=false
rules.operations.GroupMemberModel.validators.userId.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.userId.validationMessage=state.GroupMemberModel.userId.message

rules.operations.GroupMemberModel.validators.userIdType.valueExpression=['userIdType']
rules.operations.GroupMemberModel.validators.userIdType.required=true
rules.operations.GroupMemberModel.validators.userIdType.freemarker=true
rules.operations.GroupMemberModel.validators.userIdType.enable=false
rules.operations.GroupMemberModel.validators.userIdType.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.userIdType.validationMessage=state.GroupMemberModel.userIdType.message

rules.operations.GroupMemberModel.validators.memberType.valueExpression=['memberType']
rules.operations.GroupMemberModel.validators.memberType.required=true
rules.operations.GroupMemberModel.validators.memberType.freemarker=true
rules.operations.GroupMemberModel.validators.memberType.enable=false
rules.operations.GroupMemberModel.validators.memberType.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.memberType.validationMessage=state.GroupMemberModel.memberType.message

rules.operations.GroupMemberModel.validators.status.valueExpression=['status']
rules.operations.GroupMemberModel.validators.status.required=true
rules.operations.GroupMemberModel.validators.status.freemarker=true
rules.operations.GroupMemberModel.validators.status.enable=false
rules.operations.GroupMemberModel.validators.status.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.status.validationMessage=state.GroupMemberModel.status.message

rules.operations.GroupMemberModel.validators.createdAt.valueExpression=['createdAt']
rules.operations.GroupMemberModel.validators.createdAt.required=true
rules.operations.GroupMemberModel.validators.createdAt.freemarker=true
rules.operations.GroupMemberModel.validators.createdAt.enable=false
rules.operations.GroupMemberModel.validators.createdAt.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.createdAt.validationMessage=state.GroupMemberModel.createdAt.message

rules.operations.GroupMemberModel.validators.effectiveFrom.valueExpression=['effectiveFrom']
rules.operations.GroupMemberModel.validators.effectiveFrom.required=true
rules.operations.GroupMemberModel.validators.effectiveFrom.freemarker=true
rules.operations.GroupMemberModel.validators.effectiveFrom.enable=false
rules.operations.GroupMemberModel.validators.effectiveFrom.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupMemberModel.validators.effectiveFrom.validationMessage=state.GroupMemberModel.effectiveFrom.message

################################

rules.operations.OperationRequestModel.validate=false

rules.operations.OperationRequestModel.validators.id.valueExpression=['operation']['id']
rules.operations.OperationRequestModel.validators.id.required=true
rules.operations.OperationRequestModel.validators.id.freemarker=true
rules.operations.OperationRequestModel.validators.id.enable=false
rules.operations.OperationRequestModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.id.validationMessage=state.operation.id.message

rules.operations.OperationRequestModel.validators.code.valueExpression=['operation']['code']
rules.operations.OperationRequestModel.validators.code.required=true
rules.operations.OperationRequestModel.validators.code.freemarker=true
rules.operations.OperationRequestModel.validators.code.enable=false
rules.operations.OperationRequestModel.validators.code.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.code.validationMessage=state.operation.code.message

rules.operations.OperationRequestModel.validators.module.valueExpression=['operation']['module']
rules.operations.OperationRequestModel.validators.module.required=true
rules.operations.OperationRequestModel.validators.module.freemarker=true
rules.operations.OperationRequestModel.validators.module.enable=false
rules.operations.OperationRequestModel.validators.module.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.module.validationMessage=state.operation.module.message

rules.operations.OperationRequestModel.validators.name.valueExpression=['operation']['name']
rules.operations.OperationRequestModel.validators.name.required=true
rules.operations.OperationRequestModel.validators.name.freemarker=true
rules.operations.OperationRequestModel.validators.name.enable=false
rules.operations.OperationRequestModel.validators.name.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.name.validationMessage=state.operation.name.message

rules.operations.OperationRequestModel.validators.type.valueExpression=['operation']['type']
rules.operations.OperationRequestModel.validators.type.required=true
rules.operations.OperationRequestModel.validators.type.freemarker=true
rules.operations.OperationRequestModel.validators.type.enable=false
rules.operations.OperationRequestModel.validators.type.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.type.validationMessage=state.operation.type.message

rules.operations.OperationRequestModel.validators.fromState.valueExpression=['operation']['fromState']
rules.operations.OperationRequestModel.validators.fromState.required=true
rules.operations.OperationRequestModel.validators.fromState.freemarker=true
rules.operations.OperationRequestModel.validators.fromState.enable=false
rules.operations.OperationRequestModel.validators.fromState.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.fromState.validationMessage=state.operation.fromState.message

rules.operations.OperationRequestModel.validators.toState.valueExpression=['operation']['toState']
rules.operations.OperationRequestModel.validators.toState.required=true
rules.operations.OperationRequestModel.validators.toState.freemarker=true
rules.operations.OperationRequestModel.validators.toState.enable=false
rules.operations.OperationRequestModel.validators.toState.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.OperationRequestModel.validators.toState.validationMessage=state.operation.toState.message

################################

rules.operations.GroupRelationRequestModel.validate=false

rules.operations.GroupRelationRequestModel.validators.id.valueExpression=['groupRelation']['id']
rules.operations.GroupRelationRequestModel.validators.id.required=true
rules.operations.GroupRelationRequestModel.validators.id.freemarker=true
rules.operations.GroupRelationRequestModel.validators.id.enable=false
rules.operations.GroupRelationRequestModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRelationRequestModel.validators.id.validationMessage=state.groupRelation.id.message

rules.operations.GroupRelationRequestModel.validators.fromGroupId.valueExpression=['groupRelation']['fromGroupId']
rules.operations.GroupRelationRequestModel.validators.fromGroupId.required=true
rules.operations.GroupRelationRequestModel.validators.fromGroupId.freemarker=true
rules.operations.GroupRelationRequestModel.validators.fromGroupId.enable=false
rules.operations.GroupRelationRequestModel.validators.fromGroupId.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRelationRequestModel.validators.fromGroupId.validationMessage=state.groupRelation.fromGroupId.message

rules.operations.GroupRelationRequestModel.validators.operationId.valueExpression=['groupRelation']['operationId']
rules.operations.GroupRelationRequestModel.validators.operationId.required=true
rules.operations.GroupRelationRequestModel.validators.operationId.freemarker=true
rules.operations.GroupRelationRequestModel.validators.operationId.enable=false
rules.operations.GroupRelationRequestModel.validators.operationId.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRelationRequestModel.validators.operationId.validationMessage=state.groupRelation.operationId.message

rules.operations.GroupRelationRequestModel.validators.toGroupId.valueExpression=['groupRelation']['toGroupId']
rules.operations.GroupRelationRequestModel.validators.toGroupId.required=true
rules.operations.GroupRelationRequestModel.validators.toGroupId.freemarker=true
rules.operations.GroupRelationRequestModel.validators.toGroupId.enable=false
rules.operations.GroupRelationRequestModel.validators.toGroupId.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupRelationRequestModel.validators.toGroupId.validationMessage=state.groupRelation.toGroupId.message

################################

rules.operations.GroupModel.validate=false

rules.operations.GroupModel.validators.id.valueExpression=['id']
rules.operations.GroupModel.validators.id.required=true
rules.operations.GroupModel.validators.id.freemarker=true
rules.operations.GroupModel.validators.id.enable=false
rules.operations.GroupModel.validators.id.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupModel.validators.id.validationMessage=state.GroupModel.id.message

rules.operations.GroupModel.validators.name.valueExpression=['name']
rules.operations.GroupModel.validators.name.required=true
rules.operations.GroupModel.validators.name.freemarker=true
rules.operations.GroupModel.validators.name.enable=false
rules.operations.GroupModel.validators.name.validateExpression=<#if value?length < 5 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupModel.validators.name.validationMessage=state.GroupModel.name.message

rules.operations.GroupModel.validators.description.valueExpression=['description']
rules.operations.GroupModel.validators.description.required=true
rules.operations.GroupModel.validators.description.freemarker=true
rules.operations.GroupModel.validators.description.enable=false
rules.operations.GroupModel.validators.description.validateExpression= <#if value?length < 1 || value?length gt 100>false<#else>true</#if>
rules.operations.GroupModel.validators.description.validationMessage=state.GroupModel.description.message