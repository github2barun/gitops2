region.invalidRequestParams.message=INVALID_REQUEST_PARAMS
region.success.message=SUCCESS

region.recordAddedSuccessfully.message=Record Added Successfully
region.recordUpdatedSuccessfully.message=Record Updated Successfully
region.alreadyExists.message=Region/Circle already exist with this name
region.regionRemoved.message=Region/Circle removed for id: {0}
region.noRecordFound.message=No Records found for Region/Circle
region.noRecordForDeletion.message=Could not find Region/Circle in system for delete for Id: {0}
region.issueInSaving.message=There was some issue in saving Circle/Region

RegionTypeServiceImpl.regionTypeLevelExists.message=Region Type of provided level already exists
RegionTypeServiceImpl.regionSaveSuccessful.message=Region Type saved successfully
RegionTypeServiceImpl.regionUpdateSuccessful.message=Region Type updated successfully
RegionTypeServiceImpl.regionTypeNotFound.message=Region Type NOT FOUND
RegionTypeServiceImpl.regionDeletionSuccessful.message=Region Type deleted successfully

AccountResellerResponseComposer.couldNotFoundAccount.message=Could not find any accounts for:

CellsController.cellDeletedSuccessfully.message=Cell deleted successfully.
CellsController.cellUpdatedSuccessfully.message=Cell ID updated successfully.
CellsController.cellCreatedSuccessfully.message=Cell ID created successfully.

CircleController.listOfCircles.message=List of distinct Circles/Regions by id: {0}

RegionController.listOfRegionsAtLevel.message=List of Regions at level: {0}
RegionController.listOfRegions.message=List of all regions
RegionController.hierarchyCreated.message=Regions hierarchy created.
RegionController.idNotProvided.message=Region Id not provided
RegionController.blankName.message=region name is blank
RegionController.blankId.message=region id is blank
RegionController.blankOwner.message=owner name is blank
RegionController.regionDeletedSuccessfully.message=Region deleted successfully
RegionController.boundariesCreatedSuccessfully.message=region boundaries created successfully
RegionController.ovaNotExist.message=OVA account doesn`t exist
RegionController.accountsFound.message=Found accounts
RegionController.distinctDistrictsList.message=List of distinct districts
RegionController.associatedRegionsList.message=List of associated regions
RegionController.oneSearchAttributeRequired.message=Need at least one search attribute
RegionController.regionsList.message=The List Of Regions
RegionController.unknownHTTPCode.message=Location Detail for msisdn {0} returned unknown HTTP status code: {1}
RegionController.problemWithLocationData.message=Problem with location data source
RegionController.MSISDNDoNotBelongToCell.message=The given MSISDN does not belong to a valid cell
RegionController.MSISDNBelongToCell.message=The given MSISDN belongs to a valid cell
RegionController.locationCaptureDisabledForChannel.message=location capture is disabled for channel {0}
RegionController.locationCaptureDisabledForResellerType.message=location capture is disabled for resellerType {0}
RegionController.fieldsNotBlank.message=msisdn, channel, and resellerType should not be blank
RegionController.upstreamErrorByPassRule.message=Upstream error in cell-id  for msisdn: {0}. HTTP status code: {1} but setting it to SUCCESS to pass the rule.

AllowedTransfersServiceImpl.transferDeletedSuccessful.message=Allowed Transfer deleted successfully
AllowedTransfersServiceImpl.transferUpdateSuccessful.message=Allowed Transfer updated successfully
AllowedTransfersServiceImpl.fromToRegionNotFoundInTransfer.message=From and/or To region not found in Region to be updated in given allowed transfer
AllowedTransfersServiceImpl.noChangeFound.message=No change found to update
AllowedTransfersServiceImpl.transfersPartiallyAdded.message=Allowed transfers partially added
AllowedTransfersServiceImpl.transfersAddedComplete.message=All allowed transfers added successfully
AllowedTransfersServiceImpl.failedToAddTransfers.message=Failed to add allowed transfers
AllowedTransfersServiceImpl.transfersAddedSuccessfully.message=Allowed Transfer added successfully.
AllowedTransfersServiceImpl.fromToRegionExistsForRow.message=From and To region already exist in allowed transfer for row {0}
AllowedTransfersServiceImpl.fromToRegionExists.message=From and To region already exist in allowed transfer
AllowedTransfersServiceImpl.fromToRegionNotFound.message=From and/or To region not found in Region
AllowedTransfersServiceImpl.fromToRegionNotFoundForRow.message=From and/or To region not found in Region for row: {0}
AllowedTransfersServiceImpl.fromToTransferAllowed.message=From region `{0}` To region `{1}` transfer is Allowed
AllowedTransfersServiceImpl.fromToTransferNotAllowed.message=From region `{0}` To region `{1}` transfer is not Allowed

RegionServiceImpl.invalidLevelSpecified.message=an invalid level {0} specified
RegionServiceImpl.noRegionFoundAtLevel.message=no region found at level {0}
RegionServiceImpl.regionAtTopLevel.message=Region {0} at topmost level:1 can not have any parent regionId
RegionServiceImpl.parentRegionCannotBeBlank.message=Parent Region cannot be blank for level {0}. Please provide the Parent Region`s name
RegionServiceImpl.parentNotFoundForRegion.message=parent regionId {0} not found at level {1} for regionId {2}
RegionServiceImpl.errorSavingLocation.message=Error saving location details in database
RegionServiceImpl.upstreamErrorLookup.message=Upstream error in cell-id lookup for msisdn: {0}. Http status code: {1} <{2}>
RegionServiceImpl.upstreamLookupUnknownHttpCode.message=Cell-id lookup for msisdn {0} returned unknown HTTP status code: {1}
RegionServiceImpl.exceptionThrown.message=Exception thrown while processing request
RegionServiceImpl.setCellIdUrl.message=cellIdSource.url must be set
RegionServiceImpl.setLinkUrl.message=link_service.url must be set
RegionServiceImpl.noRegionFoundForName.message=no region found for region name: {0}
RegionServiceImpl.associateRegionResolved.message=Resolved associated region
RegionServiceImpl.noRegionForId.message=no region found for regionId: {0}
RegionServiceImpl.noRegionForCriteria.message=No Regions found against given criteria
RegionServiceImpl.noRegionAtLevel.message=no region found at level: {0}
RegionServiceImpl.districtsNotFound.message=Districts/Regions not found in the system
RegionServiceImpl.resolvedRegion.message=resolved region: {0}
RegionServiceImpl.noOwnerAssigned.message=no owner assigned yet to region {0} at level {1}
RegionServiceImpl.noRegionWithOwner.message=No region found with owner: {0}
RegionServiceImpl.regionAlreadyExists.message=region name or id already exists
RegionServiceImpl.regionAtInvalidLevel.message=region name {0} is at an invalid level {1}
RegionServiceImpl.regionNotFoundAtLevel.message=region {0} not found at level {1}
RegionServiceImpl.noLowestRegionWithName.message=no lowest level region found with name {0}
RegionServiceImpl.recordNotFoundForType.message=Record not found for region type {0}
RegionServiceImpl.noRecordForUniqueId.message=Record not found for region unique {0}
RegionServiceImpl.noOwnerFoundAtLevel.message=no owner found for region {0} at level {1}
RegionServiceImpl.ownerParentNotInSameHierarchy.message=owner`s parent {0} is not in the same region hierarchy as {1}
RegionServiceImpl.ownerAlreadyExists.message=An owner {0} already exists for region {1} at level {2}
RegionServiceImpl.ownerSavedSuccessfullyForRegion.message=region owner saved successfully for region {0} and owner {1}
RegionServiceImpl.ownerNotMapped.message=owner {0} not mapped for region {1} at level {2}
RegionServiceImpl.regionCantBeDeletedDueToChild.message=Region cannot be deleted because its child region found in it hierarchy
RegionServiceImpl.regionCantBeDeletedDueToMapping.message=Region cannot be deleted because mapping found in cells
RegionServiceImpl.regionCantBeDeletedDueToAllowedTransfer.message=Region cannot be deleted because mapping found in allowed transfer
RegionServiceImpl.noRegionForNameAndLevel.message=no region found with name {0} at level {1}

CellsServiceImpl.cellExists.message=Cell {0} already exists!
CellsServiceImpl.invalidRegionEntry.message=Invalid region entered
CellsServiceImpl.cellInfoSaveSuccessful.message=Cell info added successfully
CellsServiceImpl.cellInfoUpdateSuccessful.message=Cell info updated successfully
CellsServiceImpl.cellInfoDeleteSuccessful.message=Cell info deleted successfully

ModelValidator.levelParameterNotValid.message=level parameter value is not a valid number
ModelValidator.blankLevel.message=level {0} is blank
ModelValidator.blankLatitude.message=latitude {0} is blank
ModelValidator.invalidLatitude.message=latitude {0} is not a valid number
ModelValidator.latitudeOutOfRange.message=latitude {0} is not within the valid range < -90 to 90 >
ModelValidator.blankLongitude.message=longitude {0} is blank
ModelValidator.invalidLongitude.message=longitude {0} is not a valid number
ModelValidator.longitudeOutOfRange.message=longitude {0} is not within the valid range < -180 to 180 >

RegionBoundaryRepositoryCustomImpl.alreadyRegisteredBoundary.message=Boundary already registered for this region id {0}
RegionBoundaryRepositoryCustomImpl.unableToSaveBoundary.message=unable to save the boundary for region id: {0}
RegionBoundaryRepositoryCustomImpl.noRegionRegisteredForPosition.message=No region registered for this position {0}

RegionBoundaryServiceImpl.coordinatesNotFormingClosedRegion.message=The input coordinates for region {0} do not form a closed region
RegionBoundaryServiceImpl.cellDetailsNotFoundForIdnName.message=Cell details not found for cell Id: {0} cell Name: {1}
RegionBoundaryServiceImpl.cellDetailsNotFoundForId.message=Cell details not found for cell Id: {0}
