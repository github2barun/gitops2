# Properties for module ers-reseller-management-service
server.port=8033
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=true

dealermanagement.url=http://localhost:8033

logging.config=file:/opt/seamless/conf/dealer-management-system/log4j2.properties

##### Swagger Url #########
##### http://localhost:8033/swagger-ui/index.html?configUrl=/v3/api-docs/swagger-config

ers.connections.transaction_processing.url=http://localhost:8777/txe/transactionProcessing
ers_reseller_connection.url=http://localhost:8777/txe/reseller
components.endpoints.account_management_system=http://localhost:8092/ams/v1
components.endpoints.template_management_system=http://localhost:8378/template/v1
components.endpoints.lifecycle_management_system=http://localhost:9094/lifecycle
components.endpoints.notification_management_system=http://localhost:8277
components.endpoints.txe_system=http://localhost:8088/txe/v1


#for actual call
#components.endpoints.operator_management_system=http://10.21.73.216:1234/trerest_in/api
#for simulation
components.endpoints.operator_management_system=http://localhost:8098/standard-link

multiInformationFields=dealer_code,dealer_desc
operation_endpoints.createoperator=request
operation_endpoints.updateoperator=request

csg_parameters.location=Singleview - Branch

outbound_auth.enable_auth=false
outbound_auth.operator_management.username=trerest
outbound_auth.operator_management.password=trerest1
################################################################
#### SLC Properties
################################################################
customerid.information.cascade=SFC

default.fallback.resellerType.cascade=generic

Resellerstypes.information.cascade=AGENT,SUBDISTRIBUTOR,POS

reseller.AGENT.operationid.create=CREATERESELLER
reseller.AGENT.operationid.update=UPDATERESELLER
reseller.AGENT.operationid.deactivate=DEACTIVATEDSA

reseller.SUBDISTRIBUTOR.operationid.create=CREATEDEALERBRANCH
reseller.SUBDISTRIBUTOR.operationid.update=UPDATEDEALERBRANCH

reseller.POS.operationid.create=CREATEUPDATEPOS
reseller.POS.operationid.update=CREATEUPDATEPOS

reseller.generic.operationid.create=CreateOperator
reseller.generic.operationid.update=UpdateOperator
reseller.generic.operationid.deactivate=DEACTIVATE

#Mappings of SLC response to our system for VFO
reseller.extraParam.distributorExternalId=distributorExternalID
reseller.extraParam.shippingWarehouseId=shippingWarehouseId
reseller.extraParam.receivingWarehouseId=receivingWarehouseId
reseller.extraParam.blockedStatus=blockedStatus

#-------------------------------------------------------------------------------------
# Multiply accounts limit to 100 while creating pay_prereg_accounts
multiply_limit_on_add_account=false

#-------------------------------------------------------------------------------------

#Enable or disable create-operator call on single view
enable_operator_creation=false

#Enable to send a call to SLC when dealer is terminated
enable_operator_termination=false

terminate_operator_param_for_slc=disableAccount
terminate_operator_param_value_for_slc=Y

# Standard link request - reseller type to restrict if parent reseller extra parameters to be sent or not when fetching reseller data. Separated by comma in case of multiple values
stdlink_req_fetch_parent_extra_params_reseller_types=distributor

# Channel to restrict creation of dealer again when called from Singleview
# If this value is single view, dealer won't be created on SingleView side
sv_operator_creation_restriction_channel=Singleview

### Set true to generate  password from config regex 'generate_password_with_regex' and not from password policy's regex
generate_password_without_policy_regex=false
generate_password_with_regex=[A-Za-z0-9]*

################################################################
#### Template properties
################################################################
template.dropdown_names=region,district,salesArea,cluster,route,extraFields.salesArea,extraFields.cluster,extraFields.region,logisticLocation,BillingModesAllowed,BillingFrequenciesAllowed,BillingSettlementAgreementsAllowed,BillingSettlementModesAllowed

################################################################
#### SMS Provider
################################################################
#smsprovider.classname=HttpSMSProvider
#smsprovider.url=http://10.10.0.183:13013/cgi-bin/sendsms?username=ers&password=recharge&from=1200
eventschedulerconnection.url=http://localhost:8337/eventscheduler

# SMS provider connection, by default assumes kannel is running on the same host with standard configuration
smsprovider.classname=HttpSMSProvider
smsprovider.url=http://127.0.0.1:13013/cgi-bin/sendsms?username=ers&password=recharge
# SMS prefix to be added to the destination number.
smsprovider.to_prefix=+

sendSmsOnPasswordExpiry = true

###############################################################
### Start - Refill database
###############################################################

######################## JPA Connection Properties ########################################
jpa.resellermanagement.db_poolName=jpaTransactional
jpa.resellermanagement.db_driver=org.mariadb.jdbc.Driver
jpa.resellermanagement.db_url=jdbc:mariadb://localhost:3306/Refill?autoReconnect=true&failoverreadonly=false
jpa.resellermanagement.db_user=refill
jpa.resellermanagement.db_password=refill
jpa.resellermanagement.db_stat_interval_seconds=0
jpa.resellermanagement.db_query_timeout=120
jpa.resellermanagement.pool_min_size=5
jpa.resellermanagement.pool_max_size=100
jpa.resellermanagement.db_zeroDateTimeBehavior=convertToNull
jpa.resellermanagement.sdb_pool_implementation=HCP
jpa.resellermanagement.db_pool_timeout_millis=300000
jpa.resellermanagement.db_autoReconnect=true
jpa.resellermanagement.db_autoCommit=true
jpa.resellermanagement.db_connectTimeout=300000
#This is actually no timeout, it sets minimum idle connection in numbers which should always stay in the connection pool
jpa.resellermanagement.pool_timeout=15
jpa.resellermanagement.pool_validation_query=SELECT NOW()

######################## Seamless Database Connection Properties ########################################
resellermanagement.db_driver=org.mariadb.jdbc.Driver
resellermanagement.db_url=jdbc:mariadb://localhost:3306/Refill?autoReconnect=true&failoverreadonly=false
resellermanagement.db_user=refill
resellermanagement.db_password=refill
resellermanagement.db_stat_interval_seconds=0
resellermanagement.db_query_timeout=120
resellermanagement.pool_min_size=5
resellermanagement.pool_max_size=100
resellermanagement.db_zeroDateTimeBehavior=convertToNull
resellermanagement.sdb_pool_implementation=HCP
resellermanagement.db_pool_timeout_millis=300000
resellermanagement.db_autoReconnect=true
resellermanagement.db_autoCommit=true
resellermanagement.db_connectTimeout=300000
#This is actually no timeout, it sets minimum idle connection in numbers which should always stay in the connection pool
resellermanagement.pool_timeout=15
resellermanagement.pool_validation_query=SELECT NOW()

######################## HashModulus Database Connection Properties ########################################
resellermanagement.connection.1.db_poolName=hashModulusTransactional
resellermanagement.connection.1.db_driver=org.mariadb.jdbc.Driver
resellermanagement.connection.1.db_stat_interval_seconds=0
resellermanagement.connection.1.db_query_timeout=120
resellermanagement.connection.1.db_user=refill
resellermanagement.connection.1.db_password=refill
resellermanagement.connection.1.pool_min_size=5
resellermanagement.connection.1.pool_max_size=100
resellermanagement.connection.1.db_url=jdbc:mariadb://localhost:3306/Refill?autoReconnect=true&failoverreadonly=false
resellermanagement.connection.1.db_zeroDateTimeBehavior=convertToNull
resellermanagement.connection.1.sdb_pool_implementation=HCP
resellermanagement.connection.1.db_pool_timeout_millis=300000
resellermanagement.connection.1.db_autoReconnect=true
resellermanagement.connection.1.db_autoCommit=true
resellermanagement.connection.1.db_connectTimeout=300000
#This is actually no timeout, it sets minimum idle connection in numbers which should always stay in the connection pool
resellermanagement.connection.1.pool_timeout=15
resellermanagement.connection.1.pool_validation_query=SELECT NOW()

###############################################################
### End - Refill database
###############################################################

#Enable or Disable Hierarchy rule for data fetch
enable_hierarchy_rule_fetch=true

messages.source.files.path=/opt/seamless/conf/dealer-management-system

## spring mvc pattern matcher
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

# Flow control configuration
flowcontrol.default.asynchronous=false
flowcontrol.default.cooldown_time=100
flowcontrol.default.max_parallel_requests=40

## properties to be added if we want to restrict the number of subreseller search from webadmin.
resellermanagement.max_count_of_sub_resellers=50

## properties to be added if we want to restrict the number of resellers search from webadmin.
resellermanagement.max_count_of_resellers=10000

## properties to be added if we want to restrict the level of subreseller search.
resellermanagement.max_level_of_sub_resellers=6

# Add multiple reseller default users
resellermanagement.add_multi_default_users=true
resellermanagement.multi_default_users_reseller_type=agent,udsr,scd,Operator,POS,SubDistributor,Distributor,FranchiseShop,Bank,Warehouse,SUBSCRIBER_PROXY,test_1_1,ASM,OperatorAgent,233,test,test-1,test-1-1,testtt,testtype,test10101,test-1-2,test-1-3,testtype101

# Default user role id when adding new user for reseller thru
# ERSWSResellerManagementLink
resellermanagement.user_role_id=POS
resellermanagement.user.id.length.min=4

resellermanagement.defaultRole.1.reseller_type=distributor
resellermanagement.defaultRole.1.user_role_id=POS

resellermanagement.msisdn_user_role_id=POS
resellermanagement.defaultMSISDNUserRole.1.reseller_type=
resellermanagement.defaultMSISDNUserRole.1.user_role_id=

# Default user password when adding new user for reseller thru
# ERSWSResellerManagementLink. This is used only password policy is set to use
# 'Admin defined' password.
resellermanagement.user_password=2023
resellermanagement.web_user_password=2023

# Auto activation when assigning terminal to reseller thru
# ERSWSResellerManagementLink
resellermanagement.terminal_auto_activation=true

# Default terminal type when adding new terminal for reseller thru
# ERSWSResellerManagementLink.
resellermanagement.terminal_type=Phone

# Default terminal serial flag when adding new terminal for reseller thru
# terminal_serial_auto_generated=true, system will generate for you.
# terminal_serial_auto_generated=false, system will assign MSISDN by default.
# ERSWSResellerManagementLink.
resellermanagement.terminal_serial_auto_generated=false

# Reseller type which have shared accounts and want skip validation while registering reseller.
# monitored_shared_account_reseller_types=
# ERSWSResellerManagementLink.
resellermanagement.monitored_shared_account_reseller_types=

# Stategy used for id generation
# Possible options: counter_based, reseller_key_based
#
# For counter_based strategy, first value of counter is generated using below
# configuration. Subsequent values are loaded from database. So later change
# in configuration will not affect the generated values of reseller id.
#
# For reseller_key_based strategy, reseller id is always generated using
# below configuration. So change in configuration will affect the generated
# values of reseller id.
#resellermanagement.id_generation=reseller_key_based

# Prefix that will be part of auto generated reseller id.
resellermanagement.id_prefix=RES

# Number of digits for suffix that will be part of
# auto generated reseller id.
#resellermanagement.id_digits=7

# Default user password when performing a user reset for a user having the
# password change policy AdminChange_ResetSMS or AdminChange_ResetEmail.
# with no value then the system generates a password.
# IdServiceImpl
resellermanagement.reset_pin=0000

# Upon de-activating an agent whether a sms notification
# should be sent or not
resellermanagement.sms_on_deactivation=false

# There are two kinds of reseller search we can do using
# ERSWSResellerManagementLink.searchResellers():
#
# * a so called classic search where we search among children of the
# parentReseller
# * a search using allowed types mapping for a reseller type of the
# initiatorReseller
#
# Before choosing one of them we check whether initiatorReseller and
# parentReseller exist.
#
# We then look into core.properties for resellermanagement.search_resellers.*
# variables. We want to find out if a variable allowed_types exists for the
# reseller type of initiatorReseller. For example, if reseller type of
# initiatorResellers is 'agent', the property could look like this:
#
# resellermanagement.search_resellers.agent.allowed_types=agent, subagent

resellermanagement.search_resellers.operator.allowed_types=distributor
resellermanagement.search_resellers.distributor.allowed_types=distributor, subdistributor
resellermanagement.search_resellers.subdistributor.allowed_types=subdistributor, reseller
resellermanagement.search_resellers.reseller.allowed_types=reseller

#
# If this allowed_types property doesn't exist for the reseller type of
# initiatorReseller we use the classic search.
#
# In the classic search we first check if parentReseller is a child of
# initiatorReseller or we return an empty result. We then search using the
# specified search criteria.
#
# In the allowed_types search, we look up the reseller types specified in the
# allowed_types property. We will only return resellers of the allowed_types.
#
# If the parentReseller is different from initiatorReseller we assume the search
# should only be performed on children of parentReseller.
#
#resellermanagement.search_resellers.distributor.allowed_types=distributor, agent, subagent
#resellermanagement.search_resellers.agent.allowed_types=agent, subagent



resellermanagement.allow_re_allocation_of_msisdn=false
#Possible Values
## ResellerActive, ResellerDecommissioned, ResellerBlocked, ResellerFrozen, ResellerPendingApproval, ResellerApprovalDenied, ResellerBlackListed
resellermanagement.relocation_state=ResellerDecommissioned

allow_re_allocation_of_user=false
allowable_re_allocation_of_users_reseller_types=NULL


# Enable or Disable Second Level authentication for web admin  on Block,Deactivate and Freez operations
webadmin.allowSecondLevelAction=false

# Length of generated activation code
# Valid values are 1 - 64. Config value not in this range is reset to the default 5.
webadmin.generated_activation_code_length=5

# Enable or disable activation code generation for a terminal linked to a reseller during reseller creation
webadmin.generate_activation_code_on_create=true

# Enable or disable SMS notification during reseller creation
webadmin.send_activationCode_and_pin_notification=true

#Enable or disable unique check for user ids
enable_unique_user_ids=true

#Enable or disable Business Logic Rules
enable_business_logic=false

###############################################################
################### Security Whitelist Headers ################
###############################################################
headers_whitelist=ersReference,system-token,authorization

admin_reseller_types=business

##########################################################################
# Additional Fields Properties
##########################################################################
#Enable or disable Template management while on boarding resellers
enable_type_based_fields=true

# Default fallback template type
default_fallback_type=default

# date formatting
created_on_date_format_pattern=yyyy-MM-dd HH:mm:ss

# Reseller created on field name
enable_reseller_created_on=true
reseller_created_on_qualifiers=dealer_registration_date,created_on,time_created
default_created_on_fallback_name=dealer_registration_date

# Reseller customer created/modified on field name
enable_customer_created_on=true
enable_customer_modified_on=true
customer_created_on_qualifiers=customer_created_on,customer_time_created
customer_modified_on_qualifiers=customer_modified_on,customer_time_modified
customer_created_on_fallback=customer_registration_date
customer_modified_on_fallback=customer_modification_date


#--------------------------------------------------------------------------------------
#Config to update account's paylimit
#--------------------------------------------------------------------------------------
default_account_to_update_paylimit=RESELLER

##########################################################################
# VFO Related properties
##########################################################################
#Reseller Initial State
create_reseller_status_blocked=false

#Reseller Types with initial state blocked
create_reseller_status_blocked_types=distributor,reseller

#Reseller Types with parent distributor external ids
distributor_external_inherit_types=distributor,flagship

#Reseller Initial State
create_reseller_outlet_id=false

#External Component Customer Id
external_customer_id=kenya

##########################################################################
# Auto Generation Properties
##########################################################################

auto_generation_fields.reseller_id=false
auto_generation_fields.customer_id=false

auto_generation_prefixes.reseller_id=DMSR
auto_generation_prefixes.customer_id=DMSC

generateId.resellerId=
generateId.dealer_code=${idPrefix}-
generateId.dealer_code.length=4
generateId.dealer_code.failOnMaxLength=true
generateId.customer_id=

#Reseller ids are not auto generated if the type of reseller falls in this list
auto_generation_fields.excluded_reseller_types=agent,udsr,scd

auto_generation_fields.reseller_types_prefixes=

# Filter reseller types while sending create-operator call
operator_creation_enabled_types=all
##########################################################################
# Notification Related properties
##########################################################################

notification_flag.add_reseller=true
notification_flag.update_reseller=true
notification_flag.approve_reseller=true
notification_flag.add_reseller_users=true
##########################################################################

# Enable allow reseller type for search
enable_include_reseller_type_for_search=true
include_reseller_type_for_search=operator,subdistributor,distributor,franchiseshop,bank,warehouse,agent,pos,asm

# Enable allow reseller type for getResellerInfo
enable_include_reseller_type_search_from_get_reseller_info=false
include_reseller_type_search_from_get_reseller_info_allow_root_components=acms,oms,pms,ims,tms,aas,kyc,is,gms
include_reseller_type_search_from_get_reseller_info=Operator,SubDistributor,Distributor,FranchiseShop,Bank,Warehouse,Agent,Pos

# Enable reseller type based search configurable for component
enable_component_search_for_reseller_type=true
components_to_allow_for_reseller_type_search=oms,bi-engine,bi,kyc,is

# Enable allow reseller type for search
enable_allow_reseller_type_for_search_children=true
include_reseller_type_for_search_children=Operator,SubDistributor,Distributor,FranchiseShop,Bank,warehouse,Agent,Pos,asm,AdhocUser

##########################################################################
# LIFE CYCLE
##########################################################################
#Enable or disable dealer-life-cycle call (Specific to Unitel)
enable_lifecycle=false

#Enable or disable balance status per reseller type (Specific to Unitel)
balance_types=all

#Enable or disable scratch card/inventory status per reseller type (Specific to Unitel)
inventory_types=ussd
##########################################################################


##########################################################################
# REDIS CACHE
##########################################################################
# Enable or Disable caching
useCache=false
# REDIS Cache cluster URL
cache.cluster.1.url=redis://localhost:6379
cache.timeout=30000
cache.cluster.namespace=dealer-management-system
token.life=86400
# For authentication set username, password as applicable
#cache.username=default
#cache.password=default

searchableFieldsByRedis=RESELLERID,RESELLERMSISDN

##########################################################
#### This property is use to store the Reseller Object
#### If cache.basic.reseller.info=true then in Redis ResellerData (Basic info without account detail) will store.
#### If cache.basic.reseller.info=false then in Redis ResellerInfo (With account detail) will store.
#### By default Basic Info store in Redis

cache.basic.reseller.info=true
##########################################################

##########################################################
#### If cache.basic.reseller.info=false then need to add these properties and will be used when fetching account detail from account management ###

dms.system-token={"ersReference":"20211022102152378010000003086","startTime":1634898112,"rootComponent":"dms","context":{"client":{"channel":"SEAMLESS-UNIFIED"},"initiator":{"uid":"OPERATOR","typ":"RESELLERUSERNAME","rtp":"OPERATOR","resellerPath":"operator"}}}
dms.authorization=auth1234
##########################################################

# Distributed caching
useDistributedLocking=false
locktimeout=60000

##########################################################
#### On startup Dealer Manager all resellers will be cache if on.startup.cache.resellers=true

on.startup.cache.resellers=false
on.startup.cache.resellers.types=all
on.startup.cache.resellers.data.query.limit=10
on.startup.cache.async.reseller.data.query=5
on.startup.cache.store.keys.async.limit=40
##########################################################

##########################################################################

update_contract_with_dealer_type_enabled=true

#Get Password Salt From DB
use_db_salt_for_password_hashing=false

#Incoming Requests Logging Disabled
excluded_request_logging=reseller/create,reseller/update,/bulkUpdate

##########################################################################
#DataFeed Actions / Endpoints
eventType=Notification
#data_feed_actions=resellerChangeLifecycleState,getResellerInfo,changePassword,resetPassword,updateUser,addReseller,updateReseller,changeParent,resellerChangeState,getAllResellerTypes,getAllResellerTypeChildren,getAllResellerTypeParents,getAllResellerAllowedTypes,dealerBalanceStatusChange,scratchCardStatusChange,addResellerUsers,linkReseller,deLinkReseller,getAllResellerTypeDescendants
data_feed_actions=resellerChangeLifecycleState,getResellerInfo,changePassword,resetPassword,updateUser,addReseller,updateReseller,resellerChangeState,getAllResellerTypes,getAllResellerTypeChildren,getAllResellerTypeParents,getAllResellerAllowedTypes,dealerBalanceStatusChange,scratchCardStatusChange,addResellerUsers,linkReseller,deLinkReseller,changeResellerType,changeParent,deleteUsers,updatePasswordPolicy,createPasswordPolicy,deletePasswordPolicy,createResellerType,updateResellerType
##########################################################################

##########################################################################
#AuditFeed
auditFeed.eventType=audit
auditFeed.componentName=dms
auditFeed.version=1
# list of events can be either `INCLUDE` or `EXCLUDE`
audit.feed.list.type=EXCLUDE
# comma separated list
audit.feed.list.events=

# Enable or disable from and to diff for audit objects
auditFeed.events.with.changes.enabled=false
# list of events can be either `INCLUDE` or `EXCLUDE`
auditFeed.events.with.changes.type=EXCLUDE
# comma separated list of events to enable audit comparison
auditFeed.events.with.changes.list=

#Define custom template for audit logging
#auditFeed.freemarker.file.path=
#auditFeed.default.template=

##########################################################################
# Scc conn props
##########################################################################
scc.live.data.ingestor.baseUri=http://localhost:9598
scc.live.data.ingestor.restApiUri=/scc-live-data-ingestor/data/v1/ingestData
scc.live.data.ingestor.eventSourceType=auditFieldComparison
##########################################################################


##########################################################################
# API Operation access
##########################################################################
allow_on_children=false
allow_on_descendants=true
contract_auto_creation=true
##########################################################################

##########################################################################
# Properties for Roll back
##########################################################################
# if rollback_on_account_failure set to [false] then reseller will be created even some error occurred on account creation
# if rollback_on_terminal_failure set to [false] then reseller will be created even some error occurred on terminal creation
# if rollback_on_user_failure set to [false] then reseller will be created even some error occurred on users creation
# if rollback_on_shop_failure set to [false] then reseller will be created even some error occurred on shop setting creation
# if rollback_on_slc_failure set to [false] then reseller will be created even some error occurred on SLC. This is specific to VFO only
#-------------------------------------------------------------------------------------
# Roll back scenarios
#-------------------------------------------------------------------------------------
rollback_on_account_failure=true
rollback_on_terminal_failure=true
rollback_on_user_failure=true
rollback_on_shop_failure=true
rollback_on_slc_failure=false
####################Properties for Roll back END#########################

##########################################################################
#Data feed version
##########################################################################
dataFeed.version=1
dataFeed.componentName=dms


##########################################################################
#Configuration for executor service
##########################################################################
threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS
##########################################################################


##########################################################################
#Configure freemarker
##########################################################################
dataFeed.freemarker.file.path=/opt/seamless/conf/dealer-management-system/templates/dataFeed
filemanager.file.path=/var/seamless/log/dealer-management-system/errors/
##########################################################################


############### Connection properties for rest client ###############
##Connection properties for rest client
#Http Client settings(these configuration will be used while connecting to flytext server)
http.client.max_total_connections=200
#Http Client connections per route
http.client.max_connections_per_route=15
#Timeout (in millis) until a connection is established with the remote host
http.client.connection_timeout=300000
#Timeout (in millis) while waiting for data after the connection was established
http.client.socket_timeout=500000
#Retry count, when there is a failure in establishing the connection
http.client.retry_count=1

##########################################################################
# Locale properties
##########################################################################
#locale.language=en
#locale.userLangPreferenceEnabled=false
#locale.languageHeaderName=accept-language
##########################################################################


##########################################################################
# Business Logic Config
##########################################################################
businesslogic.classifier_tags.GET_RESELLER_INFO.expression=${(transaction.transactionType?matches("GET_RESELLER_INFO"))?string}
businesslogic.classifier_tags.CHANGE_RESELLER_STATE.expression=${(transaction.transactionType?matches("CHANGE_RESELLER_STATE"))?string}
businesslogic.classifier_tags.ADD_RESELLER.expression=${(transaction.transactionType?matches("ADD_RESELLER"))?string}
businesslogic.classifier_tags.ADD_RESELLER_USERS.expression=${(transaction.transactionType?matches("ADD_RESELLER_USERS"))?string}
businesslogic.classifier_tags.CHECK_RESELLER_USERS_ALREADY_EXISTS.expression=${(transaction.transactionType?matches("CHECK_RESELLER_USERS_ALREADY_EXISTS"))?string}
businesslogic.classifier_tags.DELETE_RESELLER_USERS.expression=${(transaction.transactionType?matches("DELETE_RESELLER_USERS"))?string}
businesslogic.classifier_tags.CHANGE_RESELLER_PARENT.expression=${(transaction.transactionType?matches("CHANGE_RESELLER_PARENT"))?string}
businesslogic.classifier_tags.CHANGE_RESELLER_TYPE.expression=${(transaction.transactionType?matches("CHANGE_RESELLER_TYPE"))?string}
businesslogic.classifier_tags.GET_RESELLER_CHILDREN.expression=${(transaction.transactionType?matches("GET_RESELLER_CHILDREN"))?string}
businesslogic.classifier_tags.GET_RESELLER_DATA.expression=${(transaction.transactionType?matches("GET_RESELLER_DATA"))?string}
businesslogic.classifier_tags.LIFECYCLE_ACTIVATE_STATUS.expression=${(transaction.transactionType?matches("LIFECYCLE_ACTIVATE_STATUS"))?string}
businesslogic.classifier_tags.SEARCH_RESELLER_BY_ATTRIBUTE.expression=${(transaction.transactionType?matches("SEARCH_RESELLER_BY_ATTRIBUTE"))?string}
businesslogic.classifier_tags.UPDATE_RESELLER_PAYLIMIT.expression=${(transaction.transactionType?matches("UPDATE_RESELLER_PAYLIMIT"))?string}
businesslogic.classifier_tags.UPDATE_RESELLER.expression=${(transaction.transactionType?matches("UPDATE_RESELLER"))?string}
businesslogic.classifier_tags.UPDATE_USER.expression=${(transaction.transactionType?matches("UPDATE_USER"))?string}
businesslogic.classifier_tags.APPROVE_RESELLER.expression=${(transaction.transactionType?matches("APPROVE_RESELLER"))?string}
#businesslogic.rules.CHILD_RESELLER_CHECK.classname=ResellerChildRule
#businesslogic.rules.CHILD_RESELLER_CHECK.excluded_reseller_types=operator

businesslogic.rules.RESELLER_HIERARCHY_CHECK.classname=ResellerHierarchyRule
businesslogic.rules.RESELLER_HIERARCHY_CHECK.excludeResellerTypes=operator
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.1.type_id_relations=.*->.*
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.1.match_sender_ancestor_up=-1
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.1.match_receiver_ancestor_up=-1
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.1.permit=true
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.1.match_sender_channel=false
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.2.type_id_relations=OPERATOR->BANK
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.2.match_sender_ancestor_up=-1
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.2.match_receiver_ancestor_up=-1
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.2.permit=true
businesslogic.rules.RESELLER_HIERARCHY_CHECK.filter.2.match_sender_channel=false

#--------------- UPDATE RESELLER RULES ------------------#

businesslogic.rules.UPDATE_RESELLER.classname=ResellerHierarchyRule
businesslogic.rules.UPDATE_RESELLER.excludeResellerTypes=
businesslogic.rules.UPDATE_RESELLER.filter.1.type_id_relations=OPERATOR->.*|ubFsSpecialist->fsdsr|ubFsSpecialist->FSCSR|ubFsSpecialist->ubFsOfficer|ubFsOfficer->fsdsr|ubFsOfficer->fscsr|ubFsOfficer->fs|ubFsSpecialist->ubFsSpecialist|ubFsOfficer->ubFsOfficer|ubFsOfficer->agent|dealerSpecialist->.*|itengr->.*|dealerManager->.*
businesslogic.rules.UPDATE_RESELLER.filter.1.match_sender_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.1.match_receiver_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.1.permit=true
businesslogic.rules.UPDATE_RESELLER.filter.1.match_sender_channel=false

businesslogic.rules.UPDATE_RESELLER.filter.2.type_id_relations=rFsSpecialist->fsdsr|rFsSpecialist->fscsr|rFsSpecialist->fs|rFsSpecialist->rFsSpecialist|rfsofficer->fsdsr|rfsofficer->fscsr|rfsofficer->fs|rfsofficer->rfsofficer|ccSpecialist->ccSpecialist
businesslogic.rules.UPDATE_RESELLER.filter.2.match_sender_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.2.match_receiver_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.2.permit=true
businesslogic.rules.UPDATE_RESELLER.filter.2.match_sender_channel=false

businesslogic.rules.UPDATE_RESELLER.filter.3.type_id_relations=rDealerSpecialist->mongolPost|rDealerSpecialist->bagiinDarga|rDealerSpecialist->rDealerSpecialist|itengr->.*
businesslogic.rules.UPDATE_RESELLER.filter.3.match_sender_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.3.match_receiver_ancestor_up=-1
businesslogic.rules.UPDATE_RESELLER.filter.3.permit=true
businesslogic.rules.UPDATE_RESELLER.filter.3.match_sender_channel=false

businesslogic.mappings.2.classifier_match=.*/*
businesslogic.mappings.2.classifier_tags=UPDATE_RESELLER
businesslogic.mappings.2.rule_chain=UPDATE_RESELLER

businesslogic.mappings.1.classifier_match=.*/*
businesslogic.mappings.1.classifier_tags=CHANGE_RESELLER_STATE
businesslogic.mappings.1.rule_chain=RESELLER_HIERARCHY_CHECK
##########################################################################

createOperator_OperationId=ADDRESELLERDISTRIBUTOR
updateOperator_OperationId=UPDATERESELLERDISTRIBUTOR


## ADDED to show de-linked resellers on search resellers page
allowed_types_in_children_mappings_enabled=true
allowed_types_in_children_mappings=Operator->*

allowed_types_in_get_reseller_info_mappings_enabled=true
allowed_types_in_get_reseller_info_mappings=Operator->*|Agent->POS
#ubFsSpecialist->ubFsOfficer|ubFsSpecialist->rFsSpecialist

allowed_types_in_search_mappings_enabled=true
allowed_types_in_search_mappings=Operator->*|subdistributor->*|agent->*|distributor->*|pos->*|asm->*

allowed_types_in_lifecycle_mappings_enabled =false
allowed_types_in_lifecycle_mappings=ubFsSpecialist->FSCSR|ubFsSpecialist->FSCSR|ubFsSpecialist->ubFsOfficer|ubFsOfficer->FSCSR|ubFsOfficer->FSCSR

allowed_type_keys_in_search_mappings_enabled =false
allowed_type_keys_in_search_mappings=ubFsSpecialist->FSCSR|ubFsSpecialist->FSCSR|ubFsSpecialist->ubFsOfficer|ubFsOfficer->FSCSR|ubFsOfficer->FSCSR

# Added configs for getResellerChildrenByFilter API, so that user may get given columns in response, please note that these columns must be from Refill.commission_receivers only else we need to further update the query as well.
getResellerChildrenByFilter.selectColumns=cr.tag resellerId, rt.id type, cr.name resellerName
allowed_types_in_children_by_filter_mappings_enabled=true
allowed_types_in_children_by_filter_mappings=Operator->*|SubDistributor->*|Distributor->*|Agent->*|Pos->*|FranchiseShop->*
allowed_types_in_children_by_filter_operator_user_id=Operator

##########################################################################

createOperator_OperationIds.1.operationId=ADDRESELLEROPERATOR
createOperator_OperationIds.1.resellerTypes=operator,md
createOperator_OperationIds.2.operationId=ADDRESELLERBANK
createOperator_OperationIds.2.resellerTypes=bank,UDSR
updateOperator_OperationIds.1.operationId=UPDATERESELLEROPERATOR
updateOperator_OperationIds.1.resellerTypes=operator,md
updateOperator_OperationIds.2.operationId=UPDATERESELLERBANK
updateOperator_OperationIds.2.resellerTypes=bank,UDSR
SLC_resellerType.DISTRIBUTOR=operator
SLC_resellerType.RESELLER=USDSR,ip77

login.fields.passwordField=motte_de_passe
enable_change_state_notification=false
enable_unitel_fields=false
check_balance_before_terminate=false
###########################################################################
# reset_forgetPassword.notification.use_alternate_mode
# when set true,if notification mode in /forgetPassword API is SMS and no msisdn
# available then notification will bw sent to EMAIL and if notification mode in
# api is EMAIL and no email provided then notification will be sent to SMS.
#
# reset_forgetPassword.notification.prefer_dms_over_password_policy when set
# true and in /forgetPassword API no notification mode is set then dms configs
# of pref_notification_mode and fallback_notification_mode will be used and if
# prefer_dms_over_password_policy set to false and no notification mode set in
# API then password policy can decide notification mode.
###########################################################################
reset_forgetPassword.notification.use_alternate_mode=false
reset_forgetPassword.notification.prefer_dms_over_password_policy=false

###########################################################################
# Notifications properties
# e.g. pref_notification_mode=BOTH
# fallback_notification_mode=SMS
# values can be either of BOTH, SMS or EMAIL
# while sending notifications 1st preference will be given to pref_notification_mode if its not set to BOTH
# if send to preferred mode fails the fallback_notification_mode will be attempted.
##########################################################################
pref_notification_mode=SMS
fallback_notification_mode=EMAIL
##########################################################################


# This property is used to format all amount based additional fields
# Amount is formatted on basis of currency mentioned in system.properties file
amount_based_additional_fields=dealer_balance,min_recharge_balance_amount,loanPenaltyAmount

# This property is used define the batch size for updates of custom parameters
threshold_update_batch_size=200

enable_child_resellers_optimization=true
child_resellers_optimization_for_components=oms,tms

#=======================Masking Fields======================
masking.1.fields=section,address
masking.1.startingDigits=
masking.1.endingDigits=
masking.1.notApplicableTypes=all

masking.2.fields=area
masking.2.startingDigits=1
masking.2.endingDigits=
masking.2.notApplicableTypes=all
#============================================================


#This property will enable the validation of json request body
json.request.validation.required=true

update.reseller.inherited.fields.enable=false
update.reseller.inherited.field.ids=area,region
update.reseller.inherited.field.ids.on.parent.change=area,region

#########################################
limit_extra_params.enabled=false
limit_extra_params.fields=
limit_extra_params.components=acms,ams
########################################

#=======STORE FORMATTED MSISDN IN DATABASE==================
store.formatted.msisdn=false
#===========================================================


##### Non-zero result code for reseller not found.
setNonZeroResultCodeForResellerNotFound=false
#####-----------------------------------------#####
#-------------------------------------------------------------------------------------


#-------------------------------------------------------------------------------------
# Config to check uniqueness of reseller email
#-------------------------------------------------------------------------------------
check_unique_email_for_reseller = false

#Unique Email Config Endeds
#-------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------
# Transfer the amount to parent for reseller in deactivate state
#-------------------------------------------------------------------------------------
check_transfer_balance_for_deactivate_reseller=false
check_reseller_exists_children=false

#-------------------------------------------------------------------------------------
# calling change reseller parent and type within update reseller api
#-------------------------------------------------------------------------------------
change_reseller_type_in_update_reseller_service=false
change_reseller_parent_in_update_reseller_service=false
#-------------------------------------------------------------------------------------
# config for Transfer the amount
#-------------------------------------------------------------------------------------
transfer.reseller.currency=BDT


update_reseller_params_in_change_reseller_parent=false

#-------------------------------------------------------------------------------------
# property for set result detail for validation failed
# if response.update.reseller.partial is true and some validation failed
# then response send back with resultCode and update reseller successfully
#
# if response.update.reseller.partial is false and some validation failed
# reseller will not update any field and send response back with detail
#-------------------------------------------------------------------------------------
response.update.reseller.legacy=true
response.update.reseller.partial=false
#-------------------------------------------------------------------------------------

#check if a reseller is a leaf node while de linking
leaf_node_check_for_delink=true

#These properties are added to link-reseller based on reseller status
enable_reseller_linking_on_state=true
allowed_reseller_states_for_reseller_linking=Active,Decommissioned,Blocked, Frozen,  ResellerPendingApproval

### validate channel as per mentioned config allowedChannels from request
channel.product.restriction.isChannelValidationAllowed=true
### save/not reseller data in its hierarchy (i.e children of reseller)
channel.product.restriction.hierarchicalDataSaveAllowed=true
### config to allow channels to be stored in reseller extra params w.r.t products
channel.product.restriction.allowedChannels=WEB,USSD,API

resellerTypesForAreaDemarcation.DIST=DIST,CDIST,GDIST
resellerTypesForAreaDemarcation.SE=SE,OSE
resellerTypesForAreaDemarcation.RET=RET,CRET

##The properties to enable and disable language validation while calling updateReseller API,
# also the list of system supported languages.
validateResellerLanguageAgainstSystemSupported=false
supportedResellerLanguages=en,ar,fr